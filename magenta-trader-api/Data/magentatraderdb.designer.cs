#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace magenta_trader_api.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="magentatraders")]
	public partial class magentatraderdbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InsertTrnUserFavoritesSymbol(TrnUserFavoritesSymbol instance);
    partial void UpdateTrnUserFavoritesSymbol(TrnUserFavoritesSymbol instance);
    partial void DeleteTrnUserFavoritesSymbol(TrnUserFavoritesSymbol instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertMstEvent(MstEvent instance);
    partial void UpdateMstEvent(MstEvent instance);
    partial void DeleteMstEvent(MstEvent instance);
    partial void InsertMstNew(MstNew instance);
    partial void UpdateMstNew(MstNew instance);
    partial void DeleteMstNew(MstNew instance);
    partial void InsertMstProduct(MstProduct instance);
    partial void UpdateMstProduct(MstProduct instance);
    partial void DeleteMstProduct(MstProduct instance);
    partial void InsertMstProductPackage(MstProductPackage instance);
    partial void UpdateMstProductPackage(MstProductPackage instance);
    partial void DeleteMstProductPackage(MstProductPackage instance);
    partial void InsertMstSymbol(MstSymbol instance);
    partial void UpdateMstSymbol(MstSymbol instance);
    partial void DeleteMstSymbol(MstSymbol instance);
    partial void InsertMstSymbolScreener(MstSymbolScreener instance);
    partial void UpdateMstSymbolScreener(MstSymbolScreener instance);
    partial void DeleteMstSymbolScreener(MstSymbolScreener instance);
    partial void InsertMstUser(MstUser instance);
    partial void UpdateMstUser(MstUser instance);
    partial void DeleteMstUser(MstUser instance);
    partial void InsertSysAcessLog(SysAcessLog instance);
    partial void UpdateSysAcessLog(SysAcessLog instance);
    partial void DeleteSysAcessLog(SysAcessLog instance);
    partial void InsertTmpWorkshop(TmpWorkshop instance);
    partial void UpdateTmpWorkshop(TmpWorkshop instance);
    partial void DeleteTmpWorkshop(TmpWorkshop instance);
    partial void InsertTrnAffiliate(TrnAffiliate instance);
    partial void UpdateTrnAffiliate(TrnAffiliate instance);
    partial void DeleteTrnAffiliate(TrnAffiliate instance);
    partial void InsertTrnFavorite(TrnFavorite instance);
    partial void UpdateTrnFavorite(TrnFavorite instance);
    partial void DeleteTrnFavorite(TrnFavorite instance);
    partial void InsertTrnSale(TrnSale instance);
    partial void UpdateTrnSale(TrnSale instance);
    partial void DeleteTrnSale(TrnSale instance);
    partial void InsertTrnSector(TrnSector instance);
    partial void UpdateTrnSector(TrnSector instance);
    partial void DeleteTrnSector(TrnSector instance);
    partial void InsertTrnSectorSymbol(TrnSectorSymbol instance);
    partial void UpdateTrnSectorSymbol(TrnSectorSymbol instance);
    partial void DeleteTrnSectorSymbol(TrnSectorSymbol instance);
    partial void InsertTrnStockEarning(TrnStockEarning instance);
    partial void UpdateTrnStockEarning(TrnStockEarning instance);
    partial void DeleteTrnStockEarning(TrnStockEarning instance);
    partial void InsertTrnStockPrice(TrnStockPrice instance);
    partial void UpdateTrnStockPrice(TrnStockPrice instance);
    partial void DeleteTrnStockPrice(TrnStockPrice instance);
    partial void InsertTrnStockPriceIntraDay(TrnStockPriceIntraDay instance);
    partial void UpdateTrnStockPriceIntraDay(TrnStockPriceIntraDay instance);
    partial void DeleteTrnStockPriceIntraDay(TrnStockPriceIntraDay instance);
    partial void InsertTrnUserAlert(TrnUserAlert instance);
    partial void UpdateTrnUserAlert(TrnUserAlert instance);
    partial void DeleteTrnUserAlert(TrnUserAlert instance);
    partial void InsertTrnUserAlertSymbol(TrnUserAlertSymbol instance);
    partial void UpdateTrnUserAlertSymbol(TrnUserAlertSymbol instance);
    partial void DeleteTrnUserAlertSymbol(TrnUserAlertSymbol instance);
    partial void InsertTrnUserFavorite(TrnUserFavorite instance);
    partial void UpdateTrnUserFavorite(TrnUserFavorite instance);
    partial void DeleteTrnUserFavorite(TrnUserFavorite instance);
    #endregion
		
		public magentatraderdbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public magentatraderdbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public magentatraderdbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public magentatraderdbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public magentatraderdbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<TrnUserFavoritesSymbol> TrnUserFavoritesSymbols
		{
			get
			{
				return this.GetTable<TrnUserFavoritesSymbol>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<MstEvent> MstEvents
		{
			get
			{
				return this.GetTable<MstEvent>();
			}
		}
		
		public System.Data.Linq.Table<MstNew> MstNews
		{
			get
			{
				return this.GetTable<MstNew>();
			}
		}
		
		public System.Data.Linq.Table<MstProduct> MstProducts
		{
			get
			{
				return this.GetTable<MstProduct>();
			}
		}
		
		public System.Data.Linq.Table<MstProductPackage> MstProductPackages
		{
			get
			{
				return this.GetTable<MstProductPackage>();
			}
		}
		
		public System.Data.Linq.Table<MstSymbol> MstSymbols
		{
			get
			{
				return this.GetTable<MstSymbol>();
			}
		}
		
		public System.Data.Linq.Table<MstSymbolScreener> MstSymbolScreeners
		{
			get
			{
				return this.GetTable<MstSymbolScreener>();
			}
		}
		
		public System.Data.Linq.Table<MstUser> MstUsers
		{
			get
			{
				return this.GetTable<MstUser>();
			}
		}
		
		public System.Data.Linq.Table<SysAcessLog> SysAcessLogs
		{
			get
			{
				return this.GetTable<SysAcessLog>();
			}
		}
		
		public System.Data.Linq.Table<TmpWorkshop> TmpWorkshops
		{
			get
			{
				return this.GetTable<TmpWorkshop>();
			}
		}
		
		public System.Data.Linq.Table<TrnAffiliate> TrnAffiliates
		{
			get
			{
				return this.GetTable<TrnAffiliate>();
			}
		}
		
		public System.Data.Linq.Table<TrnFavorite> TrnFavorites
		{
			get
			{
				return this.GetTable<TrnFavorite>();
			}
		}
		
		public System.Data.Linq.Table<TrnSale> TrnSales
		{
			get
			{
				return this.GetTable<TrnSale>();
			}
		}
		
		public System.Data.Linq.Table<TrnSector> TrnSectors
		{
			get
			{
				return this.GetTable<TrnSector>();
			}
		}
		
		public System.Data.Linq.Table<TrnSectorSymbol> TrnSectorSymbols
		{
			get
			{
				return this.GetTable<TrnSectorSymbol>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockEarning> TrnStockEarnings
		{
			get
			{
				return this.GetTable<TrnStockEarning>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockPrice> TrnStockPrices
		{
			get
			{
				return this.GetTable<TrnStockPrice>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockPriceIntraDay> TrnStockPriceIntraDays
		{
			get
			{
				return this.GetTable<TrnStockPriceIntraDay>();
			}
		}
		
		public System.Data.Linq.Table<TrnUserAlert> TrnUserAlerts
		{
			get
			{
				return this.GetTable<TrnUserAlert>();
			}
		}
		
		public System.Data.Linq.Table<TrnUserAlertSymbol> TrnUserAlertSymbols
		{
			get
			{
				return this.GetTable<TrnUserAlertSymbol>();
			}
		}
		
		public System.Data.Linq.Table<TrnUserFavorite> TrnUserFavorites
		{
			get
			{
				return this.GetTable<TrnUserFavorite>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnUserFavoritesSymbols")]
	public partial class TrnUserFavoritesSymbol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserFavoritesId;
		
		private int _SymbolId;
		
		private string _Symbol;
		
		private string _Trend;
		
		private System.Nullable<System.DateTime> _EncodedDate;
		
		private EntityRef<MstSymbol> _MstSymbol;
		
		private EntityRef<TrnUserFavorite> _TrnUserFavorite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserFavoritesIdChanging(int value);
    partial void OnUserFavoritesIdChanged();
    partial void OnSymbolIdChanging(int value);
    partial void OnSymbolIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnTrendChanging(string value);
    partial void OnTrendChanged();
    partial void OnEncodedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEncodedDateChanged();
    #endregion
		
		public TrnUserFavoritesSymbol()
		{
			this._MstSymbol = default(EntityRef<MstSymbol>);
			this._TrnUserFavorite = default(EntityRef<TrnUserFavorite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFavoritesId", DbType="Int NOT NULL")]
		public int UserFavoritesId
		{
			get
			{
				return this._UserFavoritesId;
			}
			set
			{
				if ((this._UserFavoritesId != value))
				{
					if (this._TrnUserFavorite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserFavoritesIdChanging(value);
					this.SendPropertyChanging();
					this._UserFavoritesId = value;
					this.SendPropertyChanged("UserFavoritesId");
					this.OnUserFavoritesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolId", DbType="Int NOT NULL")]
		public int SymbolId
		{
			get
			{
				return this._SymbolId;
			}
			set
			{
				if ((this._SymbolId != value))
				{
					if (this._MstSymbol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSymbolIdChanging(value);
					this.SendPropertyChanging();
					this._SymbolId = value;
					this.SendPropertyChanged("SymbolId");
					this.OnSymbolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trend", DbType="NVarChar(50)")]
		public string Trend
		{
			get
			{
				return this._Trend;
			}
			set
			{
				if ((this._Trend != value))
				{
					this.OnTrendChanging(value);
					this.SendPropertyChanging();
					this._Trend = value;
					this.SendPropertyChanged("Trend");
					this.OnTrendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EncodedDate
		{
			get
			{
				return this._EncodedDate;
			}
			set
			{
				if ((this._EncodedDate != value))
				{
					this.OnEncodedDateChanging(value);
					this.SendPropertyChanging();
					this._EncodedDate = value;
					this.SendPropertyChanged("EncodedDate");
					this.OnEncodedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnUserFavoritesSymbol", Storage="_MstSymbol", ThisKey="SymbolId", OtherKey="Id", IsForeignKey=true)]
		public MstSymbol MstSymbol
		{
			get
			{
				return this._MstSymbol.Entity;
			}
			set
			{
				MstSymbol previousValue = this._MstSymbol.Entity;
				if (((previousValue != value) 
							|| (this._MstSymbol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstSymbol.Entity = null;
						previousValue.TrnUserFavoritesSymbols.Remove(this);
					}
					this._MstSymbol.Entity = value;
					if ((value != null))
					{
						value.TrnUserFavoritesSymbols.Add(this);
						this._SymbolId = value.Id;
					}
					else
					{
						this._SymbolId = default(int);
					}
					this.SendPropertyChanged("MstSymbol");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnUserFavorite_TrnUserFavoritesSymbol", Storage="_TrnUserFavorite", ThisKey="UserFavoritesId", OtherKey="Id", IsForeignKey=true)]
		public TrnUserFavorite TrnUserFavorite
		{
			get
			{
				return this._TrnUserFavorite.Entity;
			}
			set
			{
				TrnUserFavorite previousValue = this._TrnUserFavorite.Entity;
				if (((previousValue != value) 
							|| (this._TrnUserFavorite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnUserFavorite.Entity = null;
						previousValue.TrnUserFavoritesSymbols.Remove(this);
					}
					this._TrnUserFavorite.Entity = value;
					if ((value != null))
					{
						value.TrnUserFavoritesSymbols.Add(this);
						this._UserFavoritesId = value.Id;
					}
					else
					{
						this._UserFavoritesId = default(int);
					}
					this.SendPropertyChanged("TrnUserFavorite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private string _User_Id;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    partial void OnUser_IdChanging(string value);
    partial void OnUser_IdChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="User_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._User_Id = value.Id;
					}
					else
					{
						this._User_Id = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _UserName;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _Discriminator;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
		private EntitySet<MstUser> _MstUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnDiscriminatorChanging(string value);
    partial void OnDiscriminatorChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discriminator", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Discriminator
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator");
					this.OnDiscriminatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="User_Id")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="AspNetUserId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstEvent")]
	public partial class MstEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _EventDate;
		
		private string _EventDescription;
		
		private string _Particulars;
		
		private string _URL;
		
		private string _EventType;
		
		private bool _IsRestricted;
		
		private bool _IsArchived;
		
		private string _VideoURL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnEventDescriptionChanging(string value);
    partial void OnEventDescriptionChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnIsRestrictedChanging(bool value);
    partial void OnIsRestrictedChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnVideoURLChanging(string value);
    partial void OnVideoURLChanged();
    #endregion
		
		public MstEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EventDescription
		{
			get
			{
				return this._EventDescription;
			}
			set
			{
				if ((this._EventDescription != value))
				{
					this.OnEventDescriptionChanging(value);
					this.SendPropertyChanging();
					this._EventDescription = value;
					this.SendPropertyChanged("EventDescription");
					this.OnEventDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestricted", DbType="Bit NOT NULL")]
		public bool IsRestricted
		{
			get
			{
				return this._IsRestricted;
			}
			set
			{
				if ((this._IsRestricted != value))
				{
					this.OnIsRestrictedChanging(value);
					this.SendPropertyChanging();
					this._IsRestricted = value;
					this.SendPropertyChanged("IsRestricted");
					this.OnIsRestrictedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoURL", DbType="NVarChar(MAX)")]
		public string VideoURL
		{
			get
			{
				return this._VideoURL;
			}
			set
			{
				if ((this._VideoURL != value))
				{
					this.OnVideoURLChanging(value);
					this.SendPropertyChanging();
					this._VideoURL = value;
					this.SendPropertyChanged("VideoURL");
					this.OnVideoURLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstNews")]
	public partial class MstNew : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _NewsDate;
		
		private string _News;
		
		private string _Particulars;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNewsDateChanging(System.DateTime value);
    partial void OnNewsDateChanged();
    partial void OnNewsChanging(string value);
    partial void OnNewsChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public MstNew()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsDate", DbType="DateTime NOT NULL")]
		public System.DateTime NewsDate
		{
			get
			{
				return this._NewsDate;
			}
			set
			{
				if ((this._NewsDate != value))
				{
					this.OnNewsDateChanging(value);
					this.SendPropertyChanging();
					this._NewsDate = value;
					this.SendPropertyChanged("NewsDate");
					this.OnNewsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_News", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string News
		{
			get
			{
				return this._News;
			}
			set
			{
				if ((this._News != value))
				{
					this.OnNewsChanging(value);
					this.SendPropertyChanging();
					this._News = value;
					this.SendPropertyChanged("News");
					this.OnNewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstProduct")]
	public partial class MstProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Product;
		
		private EntitySet<MstProductPackage> _MstProductPackages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductChanging(string value);
    partial void OnProductChanged();
    #endregion
		
		public MstProduct()
		{
			this._MstProductPackages = new EntitySet<MstProductPackage>(new Action<MstProductPackage>(this.attach_MstProductPackages), new Action<MstProductPackage>(this.detach_MstProductPackages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this.OnProductChanging(value);
					this.SendPropertyChanging();
					this._Product = value;
					this.SendPropertyChanged("Product");
					this.OnProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProduct_MstProductPackage", Storage="_MstProductPackages", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<MstProductPackage> MstProductPackages
		{
			get
			{
				return this._MstProductPackages;
			}
			set
			{
				this._MstProductPackages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstProductPackages(MstProductPackage entity)
		{
			this.SendPropertyChanging();
			entity.MstProduct = this;
		}
		
		private void detach_MstProductPackages(MstProductPackage entity)
		{
			this.SendPropertyChanging();
			entity.MstProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstProductPackage")]
	public partial class MstProductPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ProductPackage;
		
		private string _SKU;
		
		private decimal _Price;
		
		private int _ProductId;
		
		private bool _IsAvailable;
		
		private bool _WithCoupon;
		
		private bool _WithSoftware;
		
		private bool _IsReoccuring;
		
		private string _Particulars;
		
		private string _PackageURL;
		
		private string _ProductPackageGroup;
		
		private EntitySet<TrnAffiliate> _TrnAffiliates;
		
		private EntitySet<TrnSale> _TrnSales;
		
		private EntityRef<MstProduct> _MstProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductPackageChanging(string value);
    partial void OnProductPackageChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnIsAvailableChanging(bool value);
    partial void OnIsAvailableChanged();
    partial void OnWithCouponChanging(bool value);
    partial void OnWithCouponChanged();
    partial void OnWithSoftwareChanging(bool value);
    partial void OnWithSoftwareChanged();
    partial void OnIsReoccuringChanging(bool value);
    partial void OnIsReoccuringChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPackageURLChanging(string value);
    partial void OnPackageURLChanged();
    partial void OnProductPackageGroupChanging(string value);
    partial void OnProductPackageGroupChanged();
    #endregion
		
		public MstProductPackage()
		{
			this._TrnAffiliates = new EntitySet<TrnAffiliate>(new Action<TrnAffiliate>(this.attach_TrnAffiliates), new Action<TrnAffiliate>(this.detach_TrnAffiliates));
			this._TrnSales = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales), new Action<TrnSale>(this.detach_TrnSales));
			this._MstProduct = default(EntityRef<MstProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPackage", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProductPackage
		{
			get
			{
				return this._ProductPackage;
			}
			set
			{
				if ((this._ProductPackage != value))
				{
					this.OnProductPackageChanging(value);
					this.SendPropertyChanging();
					this._ProductPackage = value;
					this.SendPropertyChanged("ProductPackage");
					this.OnProductPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKU", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._MstProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL")]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this.OnIsAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsAvailable = value;
					this.SendPropertyChanged("IsAvailable");
					this.OnIsAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithCoupon", DbType="Bit NOT NULL")]
		public bool WithCoupon
		{
			get
			{
				return this._WithCoupon;
			}
			set
			{
				if ((this._WithCoupon != value))
				{
					this.OnWithCouponChanging(value);
					this.SendPropertyChanging();
					this._WithCoupon = value;
					this.SendPropertyChanged("WithCoupon");
					this.OnWithCouponChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithSoftware", DbType="Bit NOT NULL")]
		public bool WithSoftware
		{
			get
			{
				return this._WithSoftware;
			}
			set
			{
				if ((this._WithSoftware != value))
				{
					this.OnWithSoftwareChanging(value);
					this.SendPropertyChanging();
					this._WithSoftware = value;
					this.SendPropertyChanged("WithSoftware");
					this.OnWithSoftwareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReoccuring", DbType="Bit NOT NULL")]
		public bool IsReoccuring
		{
			get
			{
				return this._IsReoccuring;
			}
			set
			{
				if ((this._IsReoccuring != value))
				{
					this.OnIsReoccuringChanging(value);
					this.SendPropertyChanging();
					this._IsReoccuring = value;
					this.SendPropertyChanged("IsReoccuring");
					this.OnIsReoccuringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageURL", DbType="NVarChar(MAX)")]
		public string PackageURL
		{
			get
			{
				return this._PackageURL;
			}
			set
			{
				if ((this._PackageURL != value))
				{
					this.OnPackageURLChanging(value);
					this.SendPropertyChanging();
					this._PackageURL = value;
					this.SendPropertyChanged("PackageURL");
					this.OnPackageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPackageGroup", DbType="NVarChar(255)")]
		public string ProductPackageGroup
		{
			get
			{
				return this._ProductPackageGroup;
			}
			set
			{
				if ((this._ProductPackageGroup != value))
				{
					this.OnProductPackageGroupChanging(value);
					this.SendPropertyChanging();
					this._ProductPackageGroup = value;
					this.SendPropertyChanged("ProductPackageGroup");
					this.OnProductPackageGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProductPackage_TrnAffiliate", Storage="_TrnAffiliates", ThisKey="Id", OtherKey="ProductPackageId")]
		public EntitySet<TrnAffiliate> TrnAffiliates
		{
			get
			{
				return this._TrnAffiliates;
			}
			set
			{
				this._TrnAffiliates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProductPackage_TrnSale", Storage="_TrnSales", ThisKey="Id", OtherKey="ProductPackageId")]
		public EntitySet<TrnSale> TrnSales
		{
			get
			{
				return this._TrnSales;
			}
			set
			{
				this._TrnSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProduct_MstProductPackage", Storage="_MstProduct", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public MstProduct MstProduct
		{
			get
			{
				return this._MstProduct.Entity;
			}
			set
			{
				MstProduct previousValue = this._MstProduct.Entity;
				if (((previousValue != value) 
							|| (this._MstProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstProduct.Entity = null;
						previousValue.MstProductPackages.Remove(this);
					}
					this._MstProduct.Entity = value;
					if ((value != null))
					{
						value.MstProductPackages.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("MstProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnAffiliates(TrnAffiliate entity)
		{
			this.SendPropertyChanging();
			entity.MstProductPackage = this;
		}
		
		private void detach_TrnAffiliates(TrnAffiliate entity)
		{
			this.SendPropertyChanging();
			entity.MstProductPackage = null;
		}
		
		private void attach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstProductPackage = this;
		}
		
		private void detach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstProductPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstSymbol")]
	public partial class MstSymbol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Symbol;
		
		private string _Description;
		
		private string _Exchange;
		
		private System.Nullable<System.DateTime> _LatestQuoteDate;
		
		private System.Nullable<System.DateTime> _CalendarUpDate;
		
		private string _CalendarUpParticulars;
		
		private System.Nullable<decimal> _CalendarUpDelta;
		
		private System.Nullable<decimal> _CalendarUpPercentage;
		
		private System.Nullable<System.DateTime> _CalendarDownDate;
		
		private string _CalendarDownParticulars;
		
		private System.Nullable<decimal> _CalendarDownDelta;
		
		private System.Nullable<decimal> _CalendarDownPercentage;
		
		private System.Nullable<decimal> _ClosePrice;
		
		private System.Nullable<decimal> _Volume;
		
		private System.Nullable<decimal> _GrowthDecayRate;
		
		private System.Nullable<decimal> _GrowthDecayRateW1;
		
		private System.Nullable<decimal> _GrowthDecayRateW2;
		
		private System.Nullable<decimal> _GrowthDecayRateW3;
		
		private System.Nullable<decimal> _GrowthDecayRateM1;
		
		private System.Nullable<decimal> _GrowthDecayRateM2;
		
		private System.Nullable<decimal> _GrowthDecayRateM3;
		
		private System.Nullable<int> _NoOfYears;
		
		private System.Nullable<int> _TrendNoOfDays;
		
		private string _WinLossCurrent30;
		
		private System.Nullable<decimal> _WinLossAverageCurrent30;
		
		private string _WinLoss20;
		
		private System.Nullable<decimal> _WinLossAverage20;
		
		private string _WinLoss40;
		
		private System.Nullable<decimal> _WinLossAverage40;
		
		private string _WinLoss60;
		
		private System.Nullable<decimal> _WinLossAverage60;
		
		private System.Nullable<decimal> _CorrelationCoefficient30;
		
		private System.Nullable<decimal> _SeasonalityCorrelation;
		
		private System.Nullable<int> _MACDTrendNoOfDays;
		
		private System.Nullable<decimal> _MACDGrowthDecayRate;
		
		private System.Nullable<int> _EMATrendNoOfDays;
		
		private System.Nullable<decimal> _EMAGrowthDecayRate;
		
		private System.Nullable<System.DateTime> _EMAStartDate;
		
		private System.Nullable<decimal> _EMALinear;
		
		private System.Nullable<int> _MACDLastCrossoverNoOfDays;
		
		private string _MACDPosition;
		
		private System.Nullable<int> _EMALastCrossoverNoOfDays;
		
		private System.Nullable<decimal> _Nov7ClosePrice;
		
		private System.Nullable<int> _Nov7NumberOfDays;
		
		private System.Nullable<decimal> _Nov7CorrelationCoefficient;
		
		private System.Nullable<decimal> _MACDLinear;
		
		private EntitySet<TrnUserFavoritesSymbol> _TrnUserFavoritesSymbols;
		
		private EntitySet<MstSymbolScreener> _MstSymbolScreeners;
		
		private EntitySet<TrnFavorite> _TrnFavorites;
		
		private EntitySet<TrnSectorSymbol> _TrnSectorSymbols;
		
		private EntitySet<TrnStockEarning> _TrnStockEarnings;
		
		private EntitySet<TrnStockPrice> _TrnStockPrices;
		
		private EntitySet<TrnStockPriceIntraDay> _TrnStockPriceIntraDays;
		
		private EntitySet<TrnUserAlertSymbol> _TrnUserAlertSymbols;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExchangeChanging(string value);
    partial void OnExchangeChanged();
    partial void OnLatestQuoteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLatestQuoteDateChanged();
    partial void OnCalendarUpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCalendarUpDateChanged();
    partial void OnCalendarUpParticularsChanging(string value);
    partial void OnCalendarUpParticularsChanged();
    partial void OnCalendarUpDeltaChanging(System.Nullable<decimal> value);
    partial void OnCalendarUpDeltaChanged();
    partial void OnCalendarUpPercentageChanging(System.Nullable<decimal> value);
    partial void OnCalendarUpPercentageChanged();
    partial void OnCalendarDownDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCalendarDownDateChanged();
    partial void OnCalendarDownParticularsChanging(string value);
    partial void OnCalendarDownParticularsChanged();
    partial void OnCalendarDownDeltaChanging(System.Nullable<decimal> value);
    partial void OnCalendarDownDeltaChanged();
    partial void OnCalendarDownPercentageChanging(System.Nullable<decimal> value);
    partial void OnCalendarDownPercentageChanged();
    partial void OnClosePriceChanging(System.Nullable<decimal> value);
    partial void OnClosePriceChanged();
    partial void OnVolumeChanging(System.Nullable<decimal> value);
    partial void OnVolumeChanged();
    partial void OnGrowthDecayRateChanging(System.Nullable<decimal> value);
    partial void OnGrowthDecayRateChanged();
    partial void OnGrowthDecayRateW1Changing(System.Nullable<decimal> value);
    partial void OnGrowthDecayRateW1Changed();
    partial void OnGrowthDecayRateW2Changing(System.Nullable<decimal> value);
    partial void OnGrowthDecayRateW2Changed();
    partial void OnGrowthDecayRateW3Changing(System.Nullable<decimal> value);
    partial void OnGrowthDecayRateW3Changed();
    partial void OnGrowthDecayRateM1Changing(System.Nullable<decimal> value);
    partial void OnGrowthDecayRateM1Changed();
    partial void OnGrowthDecayRateM2Changing(System.Nullable<decimal> value);
    partial void OnGrowthDecayRateM2Changed();
    partial void OnGrowthDecayRateM3Changing(System.Nullable<decimal> value);
    partial void OnGrowthDecayRateM3Changed();
    partial void OnNoOfYearsChanging(System.Nullable<int> value);
    partial void OnNoOfYearsChanged();
    partial void OnTrendNoOfDaysChanging(System.Nullable<int> value);
    partial void OnTrendNoOfDaysChanged();
    partial void OnWinLossCurrent30Changing(string value);
    partial void OnWinLossCurrent30Changed();
    partial void OnWinLossAverageCurrent30Changing(System.Nullable<decimal> value);
    partial void OnWinLossAverageCurrent30Changed();
    partial void OnWinLoss20Changing(string value);
    partial void OnWinLoss20Changed();
    partial void OnWinLossAverage20Changing(System.Nullable<decimal> value);
    partial void OnWinLossAverage20Changed();
    partial void OnWinLoss40Changing(string value);
    partial void OnWinLoss40Changed();
    partial void OnWinLossAverage40Changing(System.Nullable<decimal> value);
    partial void OnWinLossAverage40Changed();
    partial void OnWinLoss60Changing(string value);
    partial void OnWinLoss60Changed();
    partial void OnWinLossAverage60Changing(System.Nullable<decimal> value);
    partial void OnWinLossAverage60Changed();
    partial void OnCorrelationCoefficient30Changing(System.Nullable<decimal> value);
    partial void OnCorrelationCoefficient30Changed();
    partial void OnSeasonalityCorrelationChanging(System.Nullable<decimal> value);
    partial void OnSeasonalityCorrelationChanged();
    partial void OnMACDTrendNoOfDaysChanging(System.Nullable<int> value);
    partial void OnMACDTrendNoOfDaysChanged();
    partial void OnMACDGrowthDecayRateChanging(System.Nullable<decimal> value);
    partial void OnMACDGrowthDecayRateChanged();
    partial void OnEMATrendNoOfDaysChanging(System.Nullable<int> value);
    partial void OnEMATrendNoOfDaysChanged();
    partial void OnEMAGrowthDecayRateChanging(System.Nullable<decimal> value);
    partial void OnEMAGrowthDecayRateChanged();
    partial void OnEMAStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEMAStartDateChanged();
    partial void OnEMALinearChanging(System.Nullable<decimal> value);
    partial void OnEMALinearChanged();
    partial void OnMACDLastCrossoverNoOfDaysChanging(System.Nullable<int> value);
    partial void OnMACDLastCrossoverNoOfDaysChanged();
    partial void OnMACDPositionChanging(string value);
    partial void OnMACDPositionChanged();
    partial void OnEMALastCrossoverNoOfDaysChanging(System.Nullable<int> value);
    partial void OnEMALastCrossoverNoOfDaysChanged();
    partial void OnNov7ClosePriceChanging(System.Nullable<decimal> value);
    partial void OnNov7ClosePriceChanged();
    partial void OnNov7NumberOfDaysChanging(System.Nullable<int> value);
    partial void OnNov7NumberOfDaysChanged();
    partial void OnNov7CorrelationCoefficientChanging(System.Nullable<decimal> value);
    partial void OnNov7CorrelationCoefficientChanged();
    partial void OnMACDLinearChanging(System.Nullable<decimal> value);
    partial void OnMACDLinearChanged();
    #endregion
		
		public MstSymbol()
		{
			this._TrnUserFavoritesSymbols = new EntitySet<TrnUserFavoritesSymbol>(new Action<TrnUserFavoritesSymbol>(this.attach_TrnUserFavoritesSymbols), new Action<TrnUserFavoritesSymbol>(this.detach_TrnUserFavoritesSymbols));
			this._MstSymbolScreeners = new EntitySet<MstSymbolScreener>(new Action<MstSymbolScreener>(this.attach_MstSymbolScreeners), new Action<MstSymbolScreener>(this.detach_MstSymbolScreeners));
			this._TrnFavorites = new EntitySet<TrnFavorite>(new Action<TrnFavorite>(this.attach_TrnFavorites), new Action<TrnFavorite>(this.detach_TrnFavorites));
			this._TrnSectorSymbols = new EntitySet<TrnSectorSymbol>(new Action<TrnSectorSymbol>(this.attach_TrnSectorSymbols), new Action<TrnSectorSymbol>(this.detach_TrnSectorSymbols));
			this._TrnStockEarnings = new EntitySet<TrnStockEarning>(new Action<TrnStockEarning>(this.attach_TrnStockEarnings), new Action<TrnStockEarning>(this.detach_TrnStockEarnings));
			this._TrnStockPrices = new EntitySet<TrnStockPrice>(new Action<TrnStockPrice>(this.attach_TrnStockPrices), new Action<TrnStockPrice>(this.detach_TrnStockPrices));
			this._TrnStockPriceIntraDays = new EntitySet<TrnStockPriceIntraDay>(new Action<TrnStockPriceIntraDay>(this.attach_TrnStockPriceIntraDays), new Action<TrnStockPriceIntraDay>(this.detach_TrnStockPriceIntraDays));
			this._TrnUserAlertSymbols = new EntitySet<TrnUserAlertSymbol>(new Action<TrnUserAlertSymbol>(this.attach_TrnUserAlertSymbols), new Action<TrnUserAlertSymbol>(this.detach_TrnUserAlertSymbols));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exchange", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Exchange
		{
			get
			{
				return this._Exchange;
			}
			set
			{
				if ((this._Exchange != value))
				{
					this.OnExchangeChanging(value);
					this.SendPropertyChanging();
					this._Exchange = value;
					this.SendPropertyChanged("Exchange");
					this.OnExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatestQuoteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LatestQuoteDate
		{
			get
			{
				return this._LatestQuoteDate;
			}
			set
			{
				if ((this._LatestQuoteDate != value))
				{
					this.OnLatestQuoteDateChanging(value);
					this.SendPropertyChanging();
					this._LatestQuoteDate = value;
					this.SendPropertyChanged("LatestQuoteDate");
					this.OnLatestQuoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarUpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CalendarUpDate
		{
			get
			{
				return this._CalendarUpDate;
			}
			set
			{
				if ((this._CalendarUpDate != value))
				{
					this.OnCalendarUpDateChanging(value);
					this.SendPropertyChanging();
					this._CalendarUpDate = value;
					this.SendPropertyChanged("CalendarUpDate");
					this.OnCalendarUpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarUpParticulars", DbType="NVarChar(255)")]
		public string CalendarUpParticulars
		{
			get
			{
				return this._CalendarUpParticulars;
			}
			set
			{
				if ((this._CalendarUpParticulars != value))
				{
					this.OnCalendarUpParticularsChanging(value);
					this.SendPropertyChanging();
					this._CalendarUpParticulars = value;
					this.SendPropertyChanged("CalendarUpParticulars");
					this.OnCalendarUpParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarUpDelta", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> CalendarUpDelta
		{
			get
			{
				return this._CalendarUpDelta;
			}
			set
			{
				if ((this._CalendarUpDelta != value))
				{
					this.OnCalendarUpDeltaChanging(value);
					this.SendPropertyChanging();
					this._CalendarUpDelta = value;
					this.SendPropertyChanged("CalendarUpDelta");
					this.OnCalendarUpDeltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarUpPercentage", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> CalendarUpPercentage
		{
			get
			{
				return this._CalendarUpPercentage;
			}
			set
			{
				if ((this._CalendarUpPercentage != value))
				{
					this.OnCalendarUpPercentageChanging(value);
					this.SendPropertyChanging();
					this._CalendarUpPercentage = value;
					this.SendPropertyChanged("CalendarUpPercentage");
					this.OnCalendarUpPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarDownDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CalendarDownDate
		{
			get
			{
				return this._CalendarDownDate;
			}
			set
			{
				if ((this._CalendarDownDate != value))
				{
					this.OnCalendarDownDateChanging(value);
					this.SendPropertyChanging();
					this._CalendarDownDate = value;
					this.SendPropertyChanged("CalendarDownDate");
					this.OnCalendarDownDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarDownParticulars", DbType="NVarChar(255)")]
		public string CalendarDownParticulars
		{
			get
			{
				return this._CalendarDownParticulars;
			}
			set
			{
				if ((this._CalendarDownParticulars != value))
				{
					this.OnCalendarDownParticularsChanging(value);
					this.SendPropertyChanging();
					this._CalendarDownParticulars = value;
					this.SendPropertyChanged("CalendarDownParticulars");
					this.OnCalendarDownParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarDownDelta", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> CalendarDownDelta
		{
			get
			{
				return this._CalendarDownDelta;
			}
			set
			{
				if ((this._CalendarDownDelta != value))
				{
					this.OnCalendarDownDeltaChanging(value);
					this.SendPropertyChanging();
					this._CalendarDownDelta = value;
					this.SendPropertyChanged("CalendarDownDelta");
					this.OnCalendarDownDeltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarDownPercentage", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> CalendarDownPercentage
		{
			get
			{
				return this._CalendarDownPercentage;
			}
			set
			{
				if ((this._CalendarDownPercentage != value))
				{
					this.OnCalendarDownPercentageChanging(value);
					this.SendPropertyChanging();
					this._CalendarDownPercentage = value;
					this.SendPropertyChanged("CalendarDownPercentage");
					this.OnCalendarDownPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this.OnClosePriceChanging(value);
					this.SendPropertyChanging();
					this._ClosePrice = value;
					this.SendPropertyChanged("ClosePrice");
					this.OnClosePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrowthDecayRate", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> GrowthDecayRate
		{
			get
			{
				return this._GrowthDecayRate;
			}
			set
			{
				if ((this._GrowthDecayRate != value))
				{
					this.OnGrowthDecayRateChanging(value);
					this.SendPropertyChanging();
					this._GrowthDecayRate = value;
					this.SendPropertyChanged("GrowthDecayRate");
					this.OnGrowthDecayRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrowthDecayRateW1", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> GrowthDecayRateW1
		{
			get
			{
				return this._GrowthDecayRateW1;
			}
			set
			{
				if ((this._GrowthDecayRateW1 != value))
				{
					this.OnGrowthDecayRateW1Changing(value);
					this.SendPropertyChanging();
					this._GrowthDecayRateW1 = value;
					this.SendPropertyChanged("GrowthDecayRateW1");
					this.OnGrowthDecayRateW1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrowthDecayRateW2", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> GrowthDecayRateW2
		{
			get
			{
				return this._GrowthDecayRateW2;
			}
			set
			{
				if ((this._GrowthDecayRateW2 != value))
				{
					this.OnGrowthDecayRateW2Changing(value);
					this.SendPropertyChanging();
					this._GrowthDecayRateW2 = value;
					this.SendPropertyChanged("GrowthDecayRateW2");
					this.OnGrowthDecayRateW2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrowthDecayRateW3", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> GrowthDecayRateW3
		{
			get
			{
				return this._GrowthDecayRateW3;
			}
			set
			{
				if ((this._GrowthDecayRateW3 != value))
				{
					this.OnGrowthDecayRateW3Changing(value);
					this.SendPropertyChanging();
					this._GrowthDecayRateW3 = value;
					this.SendPropertyChanged("GrowthDecayRateW3");
					this.OnGrowthDecayRateW3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrowthDecayRateM1", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> GrowthDecayRateM1
		{
			get
			{
				return this._GrowthDecayRateM1;
			}
			set
			{
				if ((this._GrowthDecayRateM1 != value))
				{
					this.OnGrowthDecayRateM1Changing(value);
					this.SendPropertyChanging();
					this._GrowthDecayRateM1 = value;
					this.SendPropertyChanged("GrowthDecayRateM1");
					this.OnGrowthDecayRateM1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrowthDecayRateM2", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> GrowthDecayRateM2
		{
			get
			{
				return this._GrowthDecayRateM2;
			}
			set
			{
				if ((this._GrowthDecayRateM2 != value))
				{
					this.OnGrowthDecayRateM2Changing(value);
					this.SendPropertyChanging();
					this._GrowthDecayRateM2 = value;
					this.SendPropertyChanged("GrowthDecayRateM2");
					this.OnGrowthDecayRateM2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrowthDecayRateM3", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> GrowthDecayRateM3
		{
			get
			{
				return this._GrowthDecayRateM3;
			}
			set
			{
				if ((this._GrowthDecayRateM3 != value))
				{
					this.OnGrowthDecayRateM3Changing(value);
					this.SendPropertyChanging();
					this._GrowthDecayRateM3 = value;
					this.SendPropertyChanged("GrowthDecayRateM3");
					this.OnGrowthDecayRateM3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfYears", DbType="Int")]
		public System.Nullable<int> NoOfYears
		{
			get
			{
				return this._NoOfYears;
			}
			set
			{
				if ((this._NoOfYears != value))
				{
					this.OnNoOfYearsChanging(value);
					this.SendPropertyChanging();
					this._NoOfYears = value;
					this.SendPropertyChanged("NoOfYears");
					this.OnNoOfYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrendNoOfDays", DbType="Int")]
		public System.Nullable<int> TrendNoOfDays
		{
			get
			{
				return this._TrendNoOfDays;
			}
			set
			{
				if ((this._TrendNoOfDays != value))
				{
					this.OnTrendNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._TrendNoOfDays = value;
					this.SendPropertyChanged("TrendNoOfDays");
					this.OnTrendNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinLossCurrent30", DbType="NVarChar(50)")]
		public string WinLossCurrent30
		{
			get
			{
				return this._WinLossCurrent30;
			}
			set
			{
				if ((this._WinLossCurrent30 != value))
				{
					this.OnWinLossCurrent30Changing(value);
					this.SendPropertyChanging();
					this._WinLossCurrent30 = value;
					this.SendPropertyChanged("WinLossCurrent30");
					this.OnWinLossCurrent30Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinLossAverageCurrent30", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> WinLossAverageCurrent30
		{
			get
			{
				return this._WinLossAverageCurrent30;
			}
			set
			{
				if ((this._WinLossAverageCurrent30 != value))
				{
					this.OnWinLossAverageCurrent30Changing(value);
					this.SendPropertyChanging();
					this._WinLossAverageCurrent30 = value;
					this.SendPropertyChanged("WinLossAverageCurrent30");
					this.OnWinLossAverageCurrent30Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinLoss20", DbType="NVarChar(50)")]
		public string WinLoss20
		{
			get
			{
				return this._WinLoss20;
			}
			set
			{
				if ((this._WinLoss20 != value))
				{
					this.OnWinLoss20Changing(value);
					this.SendPropertyChanging();
					this._WinLoss20 = value;
					this.SendPropertyChanged("WinLoss20");
					this.OnWinLoss20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinLossAverage20", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> WinLossAverage20
		{
			get
			{
				return this._WinLossAverage20;
			}
			set
			{
				if ((this._WinLossAverage20 != value))
				{
					this.OnWinLossAverage20Changing(value);
					this.SendPropertyChanging();
					this._WinLossAverage20 = value;
					this.SendPropertyChanged("WinLossAverage20");
					this.OnWinLossAverage20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinLoss40", DbType="NVarChar(50)")]
		public string WinLoss40
		{
			get
			{
				return this._WinLoss40;
			}
			set
			{
				if ((this._WinLoss40 != value))
				{
					this.OnWinLoss40Changing(value);
					this.SendPropertyChanging();
					this._WinLoss40 = value;
					this.SendPropertyChanged("WinLoss40");
					this.OnWinLoss40Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinLossAverage40", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> WinLossAverage40
		{
			get
			{
				return this._WinLossAverage40;
			}
			set
			{
				if ((this._WinLossAverage40 != value))
				{
					this.OnWinLossAverage40Changing(value);
					this.SendPropertyChanging();
					this._WinLossAverage40 = value;
					this.SendPropertyChanged("WinLossAverage40");
					this.OnWinLossAverage40Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinLoss60", DbType="NVarChar(50)")]
		public string WinLoss60
		{
			get
			{
				return this._WinLoss60;
			}
			set
			{
				if ((this._WinLoss60 != value))
				{
					this.OnWinLoss60Changing(value);
					this.SendPropertyChanging();
					this._WinLoss60 = value;
					this.SendPropertyChanged("WinLoss60");
					this.OnWinLoss60Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinLossAverage60", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> WinLossAverage60
		{
			get
			{
				return this._WinLossAverage60;
			}
			set
			{
				if ((this._WinLossAverage60 != value))
				{
					this.OnWinLossAverage60Changing(value);
					this.SendPropertyChanging();
					this._WinLossAverage60 = value;
					this.SendPropertyChanged("WinLossAverage60");
					this.OnWinLossAverage60Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrelationCoefficient30", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> CorrelationCoefficient30
		{
			get
			{
				return this._CorrelationCoefficient30;
			}
			set
			{
				if ((this._CorrelationCoefficient30 != value))
				{
					this.OnCorrelationCoefficient30Changing(value);
					this.SendPropertyChanging();
					this._CorrelationCoefficient30 = value;
					this.SendPropertyChanged("CorrelationCoefficient30");
					this.OnCorrelationCoefficient30Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonalityCorrelation", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> SeasonalityCorrelation
		{
			get
			{
				return this._SeasonalityCorrelation;
			}
			set
			{
				if ((this._SeasonalityCorrelation != value))
				{
					this.OnSeasonalityCorrelationChanging(value);
					this.SendPropertyChanging();
					this._SeasonalityCorrelation = value;
					this.SendPropertyChanged("SeasonalityCorrelation");
					this.OnSeasonalityCorrelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACDTrendNoOfDays", DbType="Int")]
		public System.Nullable<int> MACDTrendNoOfDays
		{
			get
			{
				return this._MACDTrendNoOfDays;
			}
			set
			{
				if ((this._MACDTrendNoOfDays != value))
				{
					this.OnMACDTrendNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._MACDTrendNoOfDays = value;
					this.SendPropertyChanged("MACDTrendNoOfDays");
					this.OnMACDTrendNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACDGrowthDecayRate", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> MACDGrowthDecayRate
		{
			get
			{
				return this._MACDGrowthDecayRate;
			}
			set
			{
				if ((this._MACDGrowthDecayRate != value))
				{
					this.OnMACDGrowthDecayRateChanging(value);
					this.SendPropertyChanging();
					this._MACDGrowthDecayRate = value;
					this.SendPropertyChanged("MACDGrowthDecayRate");
					this.OnMACDGrowthDecayRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMATrendNoOfDays", DbType="Int")]
		public System.Nullable<int> EMATrendNoOfDays
		{
			get
			{
				return this._EMATrendNoOfDays;
			}
			set
			{
				if ((this._EMATrendNoOfDays != value))
				{
					this.OnEMATrendNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._EMATrendNoOfDays = value;
					this.SendPropertyChanged("EMATrendNoOfDays");
					this.OnEMATrendNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAGrowthDecayRate", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> EMAGrowthDecayRate
		{
			get
			{
				return this._EMAGrowthDecayRate;
			}
			set
			{
				if ((this._EMAGrowthDecayRate != value))
				{
					this.OnEMAGrowthDecayRateChanging(value);
					this.SendPropertyChanging();
					this._EMAGrowthDecayRate = value;
					this.SendPropertyChanged("EMAGrowthDecayRate");
					this.OnEMAGrowthDecayRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EMAStartDate
		{
			get
			{
				return this._EMAStartDate;
			}
			set
			{
				if ((this._EMAStartDate != value))
				{
					this.OnEMAStartDateChanging(value);
					this.SendPropertyChanging();
					this._EMAStartDate = value;
					this.SendPropertyChanged("EMAStartDate");
					this.OnEMAStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMALinear", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> EMALinear
		{
			get
			{
				return this._EMALinear;
			}
			set
			{
				if ((this._EMALinear != value))
				{
					this.OnEMALinearChanging(value);
					this.SendPropertyChanging();
					this._EMALinear = value;
					this.SendPropertyChanged("EMALinear");
					this.OnEMALinearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACDLastCrossoverNoOfDays", DbType="Int")]
		public System.Nullable<int> MACDLastCrossoverNoOfDays
		{
			get
			{
				return this._MACDLastCrossoverNoOfDays;
			}
			set
			{
				if ((this._MACDLastCrossoverNoOfDays != value))
				{
					this.OnMACDLastCrossoverNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._MACDLastCrossoverNoOfDays = value;
					this.SendPropertyChanged("MACDLastCrossoverNoOfDays");
					this.OnMACDLastCrossoverNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACDPosition", DbType="NVarChar(50)")]
		public string MACDPosition
		{
			get
			{
				return this._MACDPosition;
			}
			set
			{
				if ((this._MACDPosition != value))
				{
					this.OnMACDPositionChanging(value);
					this.SendPropertyChanging();
					this._MACDPosition = value;
					this.SendPropertyChanged("MACDPosition");
					this.OnMACDPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMALastCrossoverNoOfDays", DbType="Int")]
		public System.Nullable<int> EMALastCrossoverNoOfDays
		{
			get
			{
				return this._EMALastCrossoverNoOfDays;
			}
			set
			{
				if ((this._EMALastCrossoverNoOfDays != value))
				{
					this.OnEMALastCrossoverNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._EMALastCrossoverNoOfDays = value;
					this.SendPropertyChanged("EMALastCrossoverNoOfDays");
					this.OnEMALastCrossoverNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nov7ClosePrice", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Nov7ClosePrice
		{
			get
			{
				return this._Nov7ClosePrice;
			}
			set
			{
				if ((this._Nov7ClosePrice != value))
				{
					this.OnNov7ClosePriceChanging(value);
					this.SendPropertyChanging();
					this._Nov7ClosePrice = value;
					this.SendPropertyChanged("Nov7ClosePrice");
					this.OnNov7ClosePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nov7NumberOfDays", DbType="Int")]
		public System.Nullable<int> Nov7NumberOfDays
		{
			get
			{
				return this._Nov7NumberOfDays;
			}
			set
			{
				if ((this._Nov7NumberOfDays != value))
				{
					this.OnNov7NumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._Nov7NumberOfDays = value;
					this.SendPropertyChanged("Nov7NumberOfDays");
					this.OnNov7NumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nov7CorrelationCoefficient", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Nov7CorrelationCoefficient
		{
			get
			{
				return this._Nov7CorrelationCoefficient;
			}
			set
			{
				if ((this._Nov7CorrelationCoefficient != value))
				{
					this.OnNov7CorrelationCoefficientChanging(value);
					this.SendPropertyChanging();
					this._Nov7CorrelationCoefficient = value;
					this.SendPropertyChanged("Nov7CorrelationCoefficient");
					this.OnNov7CorrelationCoefficientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACDLinear", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> MACDLinear
		{
			get
			{
				return this._MACDLinear;
			}
			set
			{
				if ((this._MACDLinear != value))
				{
					this.OnMACDLinearChanging(value);
					this.SendPropertyChanging();
					this._MACDLinear = value;
					this.SendPropertyChanged("MACDLinear");
					this.OnMACDLinearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnUserFavoritesSymbol", Storage="_TrnUserFavoritesSymbols", ThisKey="Id", OtherKey="SymbolId")]
		public EntitySet<TrnUserFavoritesSymbol> TrnUserFavoritesSymbols
		{
			get
			{
				return this._TrnUserFavoritesSymbols;
			}
			set
			{
				this._TrnUserFavoritesSymbols.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_MstSymbolScreener", Storage="_MstSymbolScreeners", ThisKey="Id", OtherKey="SymbolId")]
		public EntitySet<MstSymbolScreener> MstSymbolScreeners
		{
			get
			{
				return this._MstSymbolScreeners;
			}
			set
			{
				this._MstSymbolScreeners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnFavorite", Storage="_TrnFavorites", ThisKey="Id", OtherKey="SymbolId")]
		public EntitySet<TrnFavorite> TrnFavorites
		{
			get
			{
				return this._TrnFavorites;
			}
			set
			{
				this._TrnFavorites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnSectorSymbol", Storage="_TrnSectorSymbols", ThisKey="Id", OtherKey="SymbolId")]
		public EntitySet<TrnSectorSymbol> TrnSectorSymbols
		{
			get
			{
				return this._TrnSectorSymbols;
			}
			set
			{
				this._TrnSectorSymbols.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnStockEarning", Storage="_TrnStockEarnings", ThisKey="Id", OtherKey="SymbolId")]
		public EntitySet<TrnStockEarning> TrnStockEarnings
		{
			get
			{
				return this._TrnStockEarnings;
			}
			set
			{
				this._TrnStockEarnings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnStockPrice", Storage="_TrnStockPrices", ThisKey="Id", OtherKey="SymbolId")]
		public EntitySet<TrnStockPrice> TrnStockPrices
		{
			get
			{
				return this._TrnStockPrices;
			}
			set
			{
				this._TrnStockPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnStockPriceIntraDay", Storage="_TrnStockPriceIntraDays", ThisKey="Id", OtherKey="SymbolId")]
		public EntitySet<TrnStockPriceIntraDay> TrnStockPriceIntraDays
		{
			get
			{
				return this._TrnStockPriceIntraDays;
			}
			set
			{
				this._TrnStockPriceIntraDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnUserAlertSymbol", Storage="_TrnUserAlertSymbols", ThisKey="Id", OtherKey="SymbolId")]
		public EntitySet<TrnUserAlertSymbol> TrnUserAlertSymbols
		{
			get
			{
				return this._TrnUserAlertSymbols;
			}
			set
			{
				this._TrnUserAlertSymbols.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnUserFavoritesSymbols(TrnUserFavoritesSymbol entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = this;
		}
		
		private void detach_TrnUserFavoritesSymbols(TrnUserFavoritesSymbol entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = null;
		}
		
		private void attach_MstSymbolScreeners(MstSymbolScreener entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = this;
		}
		
		private void detach_MstSymbolScreeners(MstSymbolScreener entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = null;
		}
		
		private void attach_TrnFavorites(TrnFavorite entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = this;
		}
		
		private void detach_TrnFavorites(TrnFavorite entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = null;
		}
		
		private void attach_TrnSectorSymbols(TrnSectorSymbol entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = this;
		}
		
		private void detach_TrnSectorSymbols(TrnSectorSymbol entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = null;
		}
		
		private void attach_TrnStockEarnings(TrnStockEarning entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = this;
		}
		
		private void detach_TrnStockEarnings(TrnStockEarning entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = null;
		}
		
		private void attach_TrnStockPrices(TrnStockPrice entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = this;
		}
		
		private void detach_TrnStockPrices(TrnStockPrice entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = null;
		}
		
		private void attach_TrnStockPriceIntraDays(TrnStockPriceIntraDay entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = this;
		}
		
		private void detach_TrnStockPriceIntraDays(TrnStockPriceIntraDay entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = null;
		}
		
		private void attach_TrnUserAlertSymbols(TrnUserAlertSymbol entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = this;
		}
		
		private void detach_TrnUserAlertSymbols(TrnUserAlertSymbol entity)
		{
			this.SendPropertyChanging();
			entity.MstSymbol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstSymbolScreener")]
	public partial class MstSymbolScreener : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SymbolId;
		
		private string _Symbol;
		
		private int _CloseGreaterOneDayHigh;
		
		private int _CloseGreaterTwoDaysHigh;
		
		private int _LowGreaterOneDayLow;
		
		private int _LowGreaterTwoDaysLow;
		
		private int _YesterdayLowGreaterTwoDaysLow;
		
		private int _SlowKGreaterSlowD;
		
		private int _SlowKGreaterEMA20;
		
		private int _SlowKGreaterEMA80;
		
		private int _EMA3CrossesAboveEMA8;
		
		private int _YesterdayEMA3CrossesAboveEMA8;
		
		private string _TradeAction;
		
		private EntityRef<MstSymbol> _MstSymbol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSymbolIdChanging(int value);
    partial void OnSymbolIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnCloseGreaterOneDayHighChanging(int value);
    partial void OnCloseGreaterOneDayHighChanged();
    partial void OnCloseGreaterTwoDaysHighChanging(int value);
    partial void OnCloseGreaterTwoDaysHighChanged();
    partial void OnLowGreaterOneDayLowChanging(int value);
    partial void OnLowGreaterOneDayLowChanged();
    partial void OnLowGreaterTwoDaysLowChanging(int value);
    partial void OnLowGreaterTwoDaysLowChanged();
    partial void OnYesterdayLowGreaterTwoDaysLowChanging(int value);
    partial void OnYesterdayLowGreaterTwoDaysLowChanged();
    partial void OnSlowKGreaterSlowDChanging(int value);
    partial void OnSlowKGreaterSlowDChanged();
    partial void OnSlowKGreaterEMA20Changing(int value);
    partial void OnSlowKGreaterEMA20Changed();
    partial void OnSlowKGreaterEMA80Changing(int value);
    partial void OnSlowKGreaterEMA80Changed();
    partial void OnEMA3CrossesAboveEMA8Changing(int value);
    partial void OnEMA3CrossesAboveEMA8Changed();
    partial void OnYesterdayEMA3CrossesAboveEMA8Changing(int value);
    partial void OnYesterdayEMA3CrossesAboveEMA8Changed();
    partial void OnTradeActionChanging(string value);
    partial void OnTradeActionChanged();
    #endregion
		
		public MstSymbolScreener()
		{
			this._MstSymbol = default(EntityRef<MstSymbol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolId", DbType="Int NOT NULL")]
		public int SymbolId
		{
			get
			{
				return this._SymbolId;
			}
			set
			{
				if ((this._SymbolId != value))
				{
					if (this._MstSymbol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSymbolIdChanging(value);
					this.SendPropertyChanging();
					this._SymbolId = value;
					this.SendPropertyChanged("SymbolId");
					this.OnSymbolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseGreaterOneDayHigh", DbType="Int NOT NULL")]
		public int CloseGreaterOneDayHigh
		{
			get
			{
				return this._CloseGreaterOneDayHigh;
			}
			set
			{
				if ((this._CloseGreaterOneDayHigh != value))
				{
					this.OnCloseGreaterOneDayHighChanging(value);
					this.SendPropertyChanging();
					this._CloseGreaterOneDayHigh = value;
					this.SendPropertyChanged("CloseGreaterOneDayHigh");
					this.OnCloseGreaterOneDayHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseGreaterTwoDaysHigh", DbType="Int NOT NULL")]
		public int CloseGreaterTwoDaysHigh
		{
			get
			{
				return this._CloseGreaterTwoDaysHigh;
			}
			set
			{
				if ((this._CloseGreaterTwoDaysHigh != value))
				{
					this.OnCloseGreaterTwoDaysHighChanging(value);
					this.SendPropertyChanging();
					this._CloseGreaterTwoDaysHigh = value;
					this.SendPropertyChanged("CloseGreaterTwoDaysHigh");
					this.OnCloseGreaterTwoDaysHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowGreaterOneDayLow", DbType="Int NOT NULL")]
		public int LowGreaterOneDayLow
		{
			get
			{
				return this._LowGreaterOneDayLow;
			}
			set
			{
				if ((this._LowGreaterOneDayLow != value))
				{
					this.OnLowGreaterOneDayLowChanging(value);
					this.SendPropertyChanging();
					this._LowGreaterOneDayLow = value;
					this.SendPropertyChanged("LowGreaterOneDayLow");
					this.OnLowGreaterOneDayLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowGreaterTwoDaysLow", DbType="Int NOT NULL")]
		public int LowGreaterTwoDaysLow
		{
			get
			{
				return this._LowGreaterTwoDaysLow;
			}
			set
			{
				if ((this._LowGreaterTwoDaysLow != value))
				{
					this.OnLowGreaterTwoDaysLowChanging(value);
					this.SendPropertyChanging();
					this._LowGreaterTwoDaysLow = value;
					this.SendPropertyChanged("LowGreaterTwoDaysLow");
					this.OnLowGreaterTwoDaysLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YesterdayLowGreaterTwoDaysLow", DbType="Int NOT NULL")]
		public int YesterdayLowGreaterTwoDaysLow
		{
			get
			{
				return this._YesterdayLowGreaterTwoDaysLow;
			}
			set
			{
				if ((this._YesterdayLowGreaterTwoDaysLow != value))
				{
					this.OnYesterdayLowGreaterTwoDaysLowChanging(value);
					this.SendPropertyChanging();
					this._YesterdayLowGreaterTwoDaysLow = value;
					this.SendPropertyChanged("YesterdayLowGreaterTwoDaysLow");
					this.OnYesterdayLowGreaterTwoDaysLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlowKGreaterSlowD", DbType="Int NOT NULL")]
		public int SlowKGreaterSlowD
		{
			get
			{
				return this._SlowKGreaterSlowD;
			}
			set
			{
				if ((this._SlowKGreaterSlowD != value))
				{
					this.OnSlowKGreaterSlowDChanging(value);
					this.SendPropertyChanging();
					this._SlowKGreaterSlowD = value;
					this.SendPropertyChanged("SlowKGreaterSlowD");
					this.OnSlowKGreaterSlowDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlowKGreaterEMA20", DbType="Int NOT NULL")]
		public int SlowKGreaterEMA20
		{
			get
			{
				return this._SlowKGreaterEMA20;
			}
			set
			{
				if ((this._SlowKGreaterEMA20 != value))
				{
					this.OnSlowKGreaterEMA20Changing(value);
					this.SendPropertyChanging();
					this._SlowKGreaterEMA20 = value;
					this.SendPropertyChanged("SlowKGreaterEMA20");
					this.OnSlowKGreaterEMA20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlowKGreaterEMA80", DbType="Int NOT NULL")]
		public int SlowKGreaterEMA80
		{
			get
			{
				return this._SlowKGreaterEMA80;
			}
			set
			{
				if ((this._SlowKGreaterEMA80 != value))
				{
					this.OnSlowKGreaterEMA80Changing(value);
					this.SendPropertyChanging();
					this._SlowKGreaterEMA80 = value;
					this.SendPropertyChanged("SlowKGreaterEMA80");
					this.OnSlowKGreaterEMA80Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMA3CrossesAboveEMA8", DbType="Int NOT NULL")]
		public int EMA3CrossesAboveEMA8
		{
			get
			{
				return this._EMA3CrossesAboveEMA8;
			}
			set
			{
				if ((this._EMA3CrossesAboveEMA8 != value))
				{
					this.OnEMA3CrossesAboveEMA8Changing(value);
					this.SendPropertyChanging();
					this._EMA3CrossesAboveEMA8 = value;
					this.SendPropertyChanged("EMA3CrossesAboveEMA8");
					this.OnEMA3CrossesAboveEMA8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YesterdayEMA3CrossesAboveEMA8", DbType="Int NOT NULL")]
		public int YesterdayEMA3CrossesAboveEMA8
		{
			get
			{
				return this._YesterdayEMA3CrossesAboveEMA8;
			}
			set
			{
				if ((this._YesterdayEMA3CrossesAboveEMA8 != value))
				{
					this.OnYesterdayEMA3CrossesAboveEMA8Changing(value);
					this.SendPropertyChanging();
					this._YesterdayEMA3CrossesAboveEMA8 = value;
					this.SendPropertyChanged("YesterdayEMA3CrossesAboveEMA8");
					this.OnYesterdayEMA3CrossesAboveEMA8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeAction", DbType="NVarChar(50)")]
		public string TradeAction
		{
			get
			{
				return this._TradeAction;
			}
			set
			{
				if ((this._TradeAction != value))
				{
					this.OnTradeActionChanging(value);
					this.SendPropertyChanging();
					this._TradeAction = value;
					this.SendPropertyChanged("TradeAction");
					this.OnTradeActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_MstSymbolScreener", Storage="_MstSymbol", ThisKey="SymbolId", OtherKey="Id", IsForeignKey=true)]
		public MstSymbol MstSymbol
		{
			get
			{
				return this._MstSymbol.Entity;
			}
			set
			{
				MstSymbol previousValue = this._MstSymbol.Entity;
				if (((previousValue != value) 
							|| (this._MstSymbol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstSymbol.Entity = null;
						previousValue.MstSymbolScreeners.Remove(this);
					}
					this._MstSymbol.Entity = value;
					if ((value != null))
					{
						value.MstSymbolScreeners.Add(this);
						this._SymbolId = value.Id;
					}
					else
					{
						this._SymbolId = default(int);
					}
					this.SendPropertyChanged("MstSymbol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUser")]
	public partial class MstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailAddress;
		
		private string _PhoneNumber;
		
		private string _AspNetUserId;
		
		private string _Address;
		
		private string _ReferralUserName;
		
		private System.Nullable<bool> _WithSMS;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntitySet<SysAcessLog> _SysAcessLogs;
		
		private EntitySet<TrnAffiliate> _TrnAffiliates;
		
		private EntitySet<TrnFavorite> _TrnFavorites;
		
		private EntitySet<TrnSale> _TrnSales;
		
		private EntitySet<TrnUserAlert> _TrnUserAlerts;
		
		private EntitySet<TrnUserFavorite> _TrnUserFavorites;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAspNetUserIdChanging(string value);
    partial void OnAspNetUserIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnReferralUserNameChanging(string value);
    partial void OnReferralUserNameChanged();
    partial void OnWithSMSChanging(System.Nullable<bool> value);
    partial void OnWithSMSChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public MstUser()
		{
			this._SysAcessLogs = new EntitySet<SysAcessLog>(new Action<SysAcessLog>(this.attach_SysAcessLogs), new Action<SysAcessLog>(this.detach_SysAcessLogs));
			this._TrnAffiliates = new EntitySet<TrnAffiliate>(new Action<TrnAffiliate>(this.attach_TrnAffiliates), new Action<TrnAffiliate>(this.detach_TrnAffiliates));
			this._TrnFavorites = new EntitySet<TrnFavorite>(new Action<TrnFavorite>(this.attach_TrnFavorites), new Action<TrnFavorite>(this.detach_TrnFavorites));
			this._TrnSales = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales), new Action<TrnSale>(this.detach_TrnSales));
			this._TrnUserAlerts = new EntitySet<TrnUserAlert>(new Action<TrnUserAlert>(this.attach_TrnUserAlerts), new Action<TrnUserAlert>(this.detach_TrnUserAlerts));
			this._TrnUserFavorites = new EntitySet<TrnUserFavorite>(new Action<TrnUserFavorite>(this.attach_TrnUserFavorites), new Action<TrnUserFavorite>(this.detach_TrnUserFavorites));
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetUserId", DbType="NVarChar(128)")]
		public string AspNetUserId
		{
			get
			{
				return this._AspNetUserId;
			}
			set
			{
				if ((this._AspNetUserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAspNetUserIdChanging(value);
					this.SendPropertyChanging();
					this._AspNetUserId = value;
					this.SendPropertyChanged("AspNetUserId");
					this.OnAspNetUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralUserName", DbType="NVarChar(50)")]
		public string ReferralUserName
		{
			get
			{
				return this._ReferralUserName;
			}
			set
			{
				if ((this._ReferralUserName != value))
				{
					this.OnReferralUserNameChanging(value);
					this.SendPropertyChanging();
					this._ReferralUserName = value;
					this.SendPropertyChanged("ReferralUserName");
					this.OnReferralUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithSMS", DbType="Bit")]
		public System.Nullable<bool> WithSMS
		{
			get
			{
				return this._WithSMS;
			}
			set
			{
				if ((this._WithSMS != value))
				{
					this.OnWithSMSChanging(value);
					this.SendPropertyChanging();
					this._WithSMS = value;
					this.SendPropertyChanged("WithSMS");
					this.OnWithSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_SysAcessLog", Storage="_SysAcessLogs", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<SysAcessLog> SysAcessLogs
		{
			get
			{
				return this._SysAcessLogs;
			}
			set
			{
				this._SysAcessLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnAffiliate", Storage="_TrnAffiliates", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TrnAffiliate> TrnAffiliates
		{
			get
			{
				return this._TrnAffiliates;
			}
			set
			{
				this._TrnAffiliates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnFavorite", Storage="_TrnFavorites", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TrnFavorite> TrnFavorites
		{
			get
			{
				return this._TrnFavorites;
			}
			set
			{
				this._TrnFavorites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale", Storage="_TrnSales", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TrnSale> TrnSales
		{
			get
			{
				return this._TrnSales;
			}
			set
			{
				this._TrnSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnUserAlert", Storage="_TrnUserAlerts", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TrnUserAlert> TrnUserAlerts
		{
			get
			{
				return this._TrnUserAlerts;
			}
			set
			{
				this._TrnUserAlerts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnUserFavorite", Storage="_TrnUserFavorites", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TrnUserFavorite> TrnUserFavorites
		{
			get
			{
				return this._TrnUserFavorites;
			}
			set
			{
				this._TrnUserFavorites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_MstUser", Storage="_AspNetUser", ThisKey="AspNetUserId", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._AspNetUserId = value.Id;
					}
					else
					{
						this._AspNetUserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SysAcessLogs(SysAcessLog entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_SysAcessLogs(SysAcessLog entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnAffiliates(TrnAffiliate entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnAffiliates(TrnAffiliate entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnFavorites(TrnFavorite entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnFavorites(TrnFavorite entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnUserAlerts(TrnUserAlert entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnUserAlerts(TrnUserAlert entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnUserFavorites(TrnUserFavorite entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnUserFavorites(TrnUserFavorite entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysAcessLog")]
	public partial class SysAcessLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.DateTime _LogDateTime;
		
		private string _Log;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLogDateTimeChanging(System.DateTime value);
    partial void OnLogDateTimeChanged();
    partial void OnLogChanging(string value);
    partial void OnLogChanged();
    #endregion
		
		public SysAcessLog()
		{
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogDateTime
		{
			get
			{
				return this._LogDateTime;
			}
			set
			{
				if ((this._LogDateTime != value))
				{
					this.OnLogDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LogDateTime = value;
					this.SendPropertyChanged("LogDateTime");
					this.OnLogDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Log]", Storage="_Log", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Log
		{
			get
			{
				return this._Log;
			}
			set
			{
				if ((this._Log != value))
				{
					this.OnLogChanging(value);
					this.SendPropertyChanging();
					this._Log = value;
					this.SendPropertyChanged("Log");
					this.OnLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_SysAcessLog", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.SysAcessLogs.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.SysAcessLogs.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TmpWorkshop")]
	public partial class TmpWorkshop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Email;
		
		private string _Phone;
		
		private System.DateTime _DateEncoded;
		
		private string _Workshop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnDateEncodedChanging(System.DateTime value);
    partial void OnDateEncodedChanged();
    partial void OnWorkshopChanging(string value);
    partial void OnWorkshopChanged();
    #endregion
		
		public TmpWorkshop()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEncoded", DbType="DateTime NOT NULL")]
		public System.DateTime DateEncoded
		{
			get
			{
				return this._DateEncoded;
			}
			set
			{
				if ((this._DateEncoded != value))
				{
					this.OnDateEncodedChanging(value);
					this.SendPropertyChanging();
					this._DateEncoded = value;
					this.SendPropertyChanged("DateEncoded");
					this.OnDateEncodedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Workshop", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Workshop
		{
			get
			{
				return this._Workshop;
			}
			set
			{
				if ((this._Workshop != value))
				{
					this.OnWorkshopChanging(value);
					this.SendPropertyChanging();
					this._Workshop = value;
					this.SendPropertyChanged("Workshop");
					this.OnWorkshopChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnAffiliate")]
	public partial class TrnAffiliate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductPackageId;
		
		private int _UserId;
		
		private string _AffiliateURL;
		
		private EntityRef<MstProductPackage> _MstProductPackage;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductPackageIdChanging(int value);
    partial void OnProductPackageIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAffiliateURLChanging(string value);
    partial void OnAffiliateURLChanged();
    #endregion
		
		public TrnAffiliate()
		{
			this._MstProductPackage = default(EntityRef<MstProductPackage>);
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPackageId", DbType="Int NOT NULL")]
		public int ProductPackageId
		{
			get
			{
				return this._ProductPackageId;
			}
			set
			{
				if ((this._ProductPackageId != value))
				{
					if (this._MstProductPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductPackageIdChanging(value);
					this.SendPropertyChanging();
					this._ProductPackageId = value;
					this.SendPropertyChanged("ProductPackageId");
					this.OnProductPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateURL", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AffiliateURL
		{
			get
			{
				return this._AffiliateURL;
			}
			set
			{
				if ((this._AffiliateURL != value))
				{
					this.OnAffiliateURLChanging(value);
					this.SendPropertyChanging();
					this._AffiliateURL = value;
					this.SendPropertyChanged("AffiliateURL");
					this.OnAffiliateURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProductPackage_TrnAffiliate", Storage="_MstProductPackage", ThisKey="ProductPackageId", OtherKey="Id", IsForeignKey=true)]
		public MstProductPackage MstProductPackage
		{
			get
			{
				return this._MstProductPackage.Entity;
			}
			set
			{
				MstProductPackage previousValue = this._MstProductPackage.Entity;
				if (((previousValue != value) 
							|| (this._MstProductPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstProductPackage.Entity = null;
						previousValue.TrnAffiliates.Remove(this);
					}
					this._MstProductPackage.Entity = value;
					if ((value != null))
					{
						value.TrnAffiliates.Add(this);
						this._ProductPackageId = value.Id;
					}
					else
					{
						this._ProductPackageId = default(int);
					}
					this.SendPropertyChanged("MstProductPackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnAffiliate", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnAffiliates.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnAffiliates.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnFavorites")]
	public partial class TrnFavorite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SymbolId;
		
		private string _Symbol;
		
		private int _UserId;
		
		private string _Remarks;
		
		private bool _IsShared;
		
		private System.Nullable<System.DateTime> _EncodedDate;
		
		private string _Trend;
		
		private EntityRef<MstSymbol> _MstSymbol;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSymbolIdChanging(int value);
    partial void OnSymbolIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsSharedChanging(bool value);
    partial void OnIsSharedChanged();
    partial void OnEncodedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEncodedDateChanged();
    partial void OnTrendChanging(string value);
    partial void OnTrendChanged();
    #endregion
		
		public TrnFavorite()
		{
			this._MstSymbol = default(EntityRef<MstSymbol>);
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolId", DbType="Int NOT NULL")]
		public int SymbolId
		{
			get
			{
				return this._SymbolId;
			}
			set
			{
				if ((this._SymbolId != value))
				{
					if (this._MstSymbol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSymbolIdChanging(value);
					this.SendPropertyChanging();
					this._SymbolId = value;
					this.SendPropertyChanged("SymbolId");
					this.OnSymbolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShared", DbType="Bit NOT NULL")]
		public bool IsShared
		{
			get
			{
				return this._IsShared;
			}
			set
			{
				if ((this._IsShared != value))
				{
					this.OnIsSharedChanging(value);
					this.SendPropertyChanging();
					this._IsShared = value;
					this.SendPropertyChanged("IsShared");
					this.OnIsSharedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EncodedDate
		{
			get
			{
				return this._EncodedDate;
			}
			set
			{
				if ((this._EncodedDate != value))
				{
					this.OnEncodedDateChanging(value);
					this.SendPropertyChanging();
					this._EncodedDate = value;
					this.SendPropertyChanged("EncodedDate");
					this.OnEncodedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trend", DbType="NVarChar(50)")]
		public string Trend
		{
			get
			{
				return this._Trend;
			}
			set
			{
				if ((this._Trend != value))
				{
					this.OnTrendChanging(value);
					this.SendPropertyChanging();
					this._Trend = value;
					this.SendPropertyChanged("Trend");
					this.OnTrendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnFavorite", Storage="_MstSymbol", ThisKey="SymbolId", OtherKey="Id", IsForeignKey=true)]
		public MstSymbol MstSymbol
		{
			get
			{
				return this._MstSymbol.Entity;
			}
			set
			{
				MstSymbol previousValue = this._MstSymbol.Entity;
				if (((previousValue != value) 
							|| (this._MstSymbol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstSymbol.Entity = null;
						previousValue.TrnFavorites.Remove(this);
					}
					this._MstSymbol.Entity = value;
					if ((value != null))
					{
						value.TrnFavorites.Add(this);
						this._SymbolId = value.Id;
					}
					else
					{
						this._SymbolId = default(int);
					}
					this.SendPropertyChanged("MstSymbol");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnFavorite", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnFavorites.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnFavorites.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSales")]
	public partial class TrnSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductPackageId;
		
		private int _UserId;
		
		private string _SalesNumber;
		
		private System.DateTime _SalesDate;
		
		private System.DateTime _RenewalDate;
		
		private System.DateTime _ExpiryDate;
		
		private string _Particulars;
		
		private decimal _Quantity;
		
		private decimal _Price;
		
		private decimal _Amount;
		
		private bool _IsActive;
		
		private bool _IsRefunded;
		
		private string _SalesStatus;
		
		private EntityRef<MstProductPackage> _MstProductPackage;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductPackageIdChanging(int value);
    partial void OnProductPackageIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSalesNumberChanging(string value);
    partial void OnSalesNumberChanged();
    partial void OnSalesDateChanging(System.DateTime value);
    partial void OnSalesDateChanged();
    partial void OnRenewalDateChanging(System.DateTime value);
    partial void OnRenewalDateChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsRefundedChanging(bool value);
    partial void OnIsRefundedChanged();
    partial void OnSalesStatusChanging(string value);
    partial void OnSalesStatusChanged();
    #endregion
		
		public TrnSale()
		{
			this._MstProductPackage = default(EntityRef<MstProductPackage>);
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPackageId", DbType="Int NOT NULL")]
		public int ProductPackageId
		{
			get
			{
				return this._ProductPackageId;
			}
			set
			{
				if ((this._ProductPackageId != value))
				{
					if (this._MstProductPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductPackageIdChanging(value);
					this.SendPropertyChanging();
					this._ProductPackageId = value;
					this.SendPropertyChanged("ProductPackageId");
					this.OnProductPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SalesNumber
		{
			get
			{
				return this._SalesNumber;
			}
			set
			{
				if ((this._SalesNumber != value))
				{
					this.OnSalesNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesNumber = value;
					this.SendPropertyChanged("SalesNumber");
					this.OnSalesNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime NOT NULL")]
		public System.DateTime SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenewalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RenewalDate
		{
			get
			{
				return this._RenewalDate;
			}
			set
			{
				if ((this._RenewalDate != value))
				{
					this.OnRenewalDateChanging(value);
					this.SendPropertyChanging();
					this._RenewalDate = value;
					this.SendPropertyChanged("RenewalDate");
					this.OnRenewalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRefunded", DbType="Bit NOT NULL")]
		public bool IsRefunded
		{
			get
			{
				return this._IsRefunded;
			}
			set
			{
				if ((this._IsRefunded != value))
				{
					this.OnIsRefundedChanging(value);
					this.SendPropertyChanging();
					this._IsRefunded = value;
					this.SendPropertyChanged("IsRefunded");
					this.OnIsRefundedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStatus", DbType="NVarChar(100)")]
		public string SalesStatus
		{
			get
			{
				return this._SalesStatus;
			}
			set
			{
				if ((this._SalesStatus != value))
				{
					this.OnSalesStatusChanging(value);
					this.SendPropertyChanging();
					this._SalesStatus = value;
					this.SendPropertyChanged("SalesStatus");
					this.OnSalesStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProductPackage_TrnSale", Storage="_MstProductPackage", ThisKey="ProductPackageId", OtherKey="Id", IsForeignKey=true)]
		public MstProductPackage MstProductPackage
		{
			get
			{
				return this._MstProductPackage.Entity;
			}
			set
			{
				MstProductPackage previousValue = this._MstProductPackage.Entity;
				if (((previousValue != value) 
							|| (this._MstProductPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstProductPackage.Entity = null;
						previousValue.TrnSales.Remove(this);
					}
					this._MstProductPackage.Entity = value;
					if ((value != null))
					{
						value.TrnSales.Add(this);
						this._ProductPackageId = value.Id;
					}
					else
					{
						this._ProductPackageId = default(int);
					}
					this.SendPropertyChanged("MstProductPackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnSales.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnSales.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSector")]
	public partial class TrnSector : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Sector;
		
		private string _Definition;
		
		private EntitySet<TrnSectorSymbol> _TrnSectorSymbols;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectorChanging(string value);
    partial void OnSectorChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    #endregion
		
		public TrnSector()
		{
			this._TrnSectorSymbols = new EntitySet<TrnSectorSymbol>(new Action<TrnSectorSymbol>(this.attach_TrnSectorSymbols), new Action<TrnSectorSymbol>(this.detach_TrnSectorSymbols));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sector", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sector
		{
			get
			{
				return this._Sector;
			}
			set
			{
				if ((this._Sector != value))
				{
					this.OnSectorChanging(value);
					this.SendPropertyChanging();
					this._Sector = value;
					this.SendPropertyChanged("Sector");
					this.OnSectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSector_TrnSectorSymbol", Storage="_TrnSectorSymbols", ThisKey="Id", OtherKey="SectorId")]
		public EntitySet<TrnSectorSymbol> TrnSectorSymbols
		{
			get
			{
				return this._TrnSectorSymbols;
			}
			set
			{
				this._TrnSectorSymbols.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSectorSymbols(TrnSectorSymbol entity)
		{
			this.SendPropertyChanging();
			entity.TrnSector = this;
		}
		
		private void detach_TrnSectorSymbols(TrnSectorSymbol entity)
		{
			this.SendPropertyChanging();
			entity.TrnSector = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSectorSymbol")]
	public partial class TrnSectorSymbol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SectorId;
		
		private int _SymbolId;
		
		private string _Symbol;
		
		private EntityRef<MstSymbol> _MstSymbol;
		
		private EntityRef<TrnSector> _TrnSector;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSectorIdChanging(int value);
    partial void OnSectorIdChanged();
    partial void OnSymbolIdChanging(int value);
    partial void OnSymbolIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    #endregion
		
		public TrnSectorSymbol()
		{
			this._MstSymbol = default(EntityRef<MstSymbol>);
			this._TrnSector = default(EntityRef<TrnSector>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectorId", DbType="Int NOT NULL")]
		public int SectorId
		{
			get
			{
				return this._SectorId;
			}
			set
			{
				if ((this._SectorId != value))
				{
					if (this._TrnSector.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectorIdChanging(value);
					this.SendPropertyChanging();
					this._SectorId = value;
					this.SendPropertyChanged("SectorId");
					this.OnSectorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolId", DbType="Int NOT NULL")]
		public int SymbolId
		{
			get
			{
				return this._SymbolId;
			}
			set
			{
				if ((this._SymbolId != value))
				{
					if (this._MstSymbol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSymbolIdChanging(value);
					this.SendPropertyChanging();
					this._SymbolId = value;
					this.SendPropertyChanged("SymbolId");
					this.OnSymbolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnSectorSymbol", Storage="_MstSymbol", ThisKey="SymbolId", OtherKey="Id", IsForeignKey=true)]
		public MstSymbol MstSymbol
		{
			get
			{
				return this._MstSymbol.Entity;
			}
			set
			{
				MstSymbol previousValue = this._MstSymbol.Entity;
				if (((previousValue != value) 
							|| (this._MstSymbol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstSymbol.Entity = null;
						previousValue.TrnSectorSymbols.Remove(this);
					}
					this._MstSymbol.Entity = value;
					if ((value != null))
					{
						value.TrnSectorSymbols.Add(this);
						this._SymbolId = value.Id;
					}
					else
					{
						this._SymbolId = default(int);
					}
					this.SendPropertyChanged("MstSymbol");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSector_TrnSectorSymbol", Storage="_TrnSector", ThisKey="SectorId", OtherKey="Id", IsForeignKey=true)]
		public TrnSector TrnSector
		{
			get
			{
				return this._TrnSector.Entity;
			}
			set
			{
				TrnSector previousValue = this._TrnSector.Entity;
				if (((previousValue != value) 
							|| (this._TrnSector.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSector.Entity = null;
						previousValue.TrnSectorSymbols.Remove(this);
					}
					this._TrnSector.Entity = value;
					if ((value != null))
					{
						value.TrnSectorSymbols.Add(this);
						this._SectorId = value.Id;
					}
					else
					{
						this._SectorId = default(int);
					}
					this.SendPropertyChanged("TrnSector");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockEarning")]
	public partial class TrnStockEarning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SymbolId;
		
		private string _Symbol;
		
		private System.DateTime _EarningDate;
		
		private string _EarningTime;
		
		private string _PeriodEnding;
		
		private System.Nullable<decimal> _EstimatedValue;
		
		private System.Nullable<decimal> _ReportedValue;
		
		private EntityRef<MstSymbol> _MstSymbol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSymbolIdChanging(int value);
    partial void OnSymbolIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnEarningDateChanging(System.DateTime value);
    partial void OnEarningDateChanged();
    partial void OnEarningTimeChanging(string value);
    partial void OnEarningTimeChanged();
    partial void OnPeriodEndingChanging(string value);
    partial void OnPeriodEndingChanged();
    partial void OnEstimatedValueChanging(System.Nullable<decimal> value);
    partial void OnEstimatedValueChanged();
    partial void OnReportedValueChanging(System.Nullable<decimal> value);
    partial void OnReportedValueChanged();
    #endregion
		
		public TrnStockEarning()
		{
			this._MstSymbol = default(EntityRef<MstSymbol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolId", DbType="Int NOT NULL")]
		public int SymbolId
		{
			get
			{
				return this._SymbolId;
			}
			set
			{
				if ((this._SymbolId != value))
				{
					if (this._MstSymbol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSymbolIdChanging(value);
					this.SendPropertyChanging();
					this._SymbolId = value;
					this.SendPropertyChanged("SymbolId");
					this.OnSymbolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarningDate", DbType="DateTime NOT NULL")]
		public System.DateTime EarningDate
		{
			get
			{
				return this._EarningDate;
			}
			set
			{
				if ((this._EarningDate != value))
				{
					this.OnEarningDateChanging(value);
					this.SendPropertyChanging();
					this._EarningDate = value;
					this.SendPropertyChanged("EarningDate");
					this.OnEarningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarningTime", DbType="NVarChar(100)")]
		public string EarningTime
		{
			get
			{
				return this._EarningTime;
			}
			set
			{
				if ((this._EarningTime != value))
				{
					this.OnEarningTimeChanging(value);
					this.SendPropertyChanging();
					this._EarningTime = value;
					this.SendPropertyChanged("EarningTime");
					this.OnEarningTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodEnding", DbType="NVarChar(50)")]
		public string PeriodEnding
		{
			get
			{
				return this._PeriodEnding;
			}
			set
			{
				if ((this._PeriodEnding != value))
				{
					this.OnPeriodEndingChanging(value);
					this.SendPropertyChanging();
					this._PeriodEnding = value;
					this.SendPropertyChanged("PeriodEnding");
					this.OnPeriodEndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedValue", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> EstimatedValue
		{
			get
			{
				return this._EstimatedValue;
			}
			set
			{
				if ((this._EstimatedValue != value))
				{
					this.OnEstimatedValueChanging(value);
					this.SendPropertyChanging();
					this._EstimatedValue = value;
					this.SendPropertyChanged("EstimatedValue");
					this.OnEstimatedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedValue", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> ReportedValue
		{
			get
			{
				return this._ReportedValue;
			}
			set
			{
				if ((this._ReportedValue != value))
				{
					this.OnReportedValueChanging(value);
					this.SendPropertyChanging();
					this._ReportedValue = value;
					this.SendPropertyChanged("ReportedValue");
					this.OnReportedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnStockEarning", Storage="_MstSymbol", ThisKey="SymbolId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstSymbol MstSymbol
		{
			get
			{
				return this._MstSymbol.Entity;
			}
			set
			{
				MstSymbol previousValue = this._MstSymbol.Entity;
				if (((previousValue != value) 
							|| (this._MstSymbol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstSymbol.Entity = null;
						previousValue.TrnStockEarnings.Remove(this);
					}
					this._MstSymbol.Entity = value;
					if ((value != null))
					{
						value.TrnStockEarnings.Add(this);
						this._SymbolId = value.Id;
					}
					else
					{
						this._SymbolId = default(int);
					}
					this.SendPropertyChanged("MstSymbol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockPrice")]
	public partial class TrnStockPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SymbolId;
		
		private string _Symbol;
		
		private System.DateTime _QuoteDate;
		
		private decimal _OpenPrice;
		
		private decimal _HighPrice;
		
		private decimal _LowPrice;
		
		private decimal _ClosePrice;
		
		private decimal _Volume;
		
		private EntityRef<MstSymbol> _MstSymbol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSymbolIdChanging(int value);
    partial void OnSymbolIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnQuoteDateChanging(System.DateTime value);
    partial void OnQuoteDateChanged();
    partial void OnOpenPriceChanging(decimal value);
    partial void OnOpenPriceChanged();
    partial void OnHighPriceChanging(decimal value);
    partial void OnHighPriceChanged();
    partial void OnLowPriceChanging(decimal value);
    partial void OnLowPriceChanged();
    partial void OnClosePriceChanging(decimal value);
    partial void OnClosePriceChanged();
    partial void OnVolumeChanging(decimal value);
    partial void OnVolumeChanged();
    #endregion
		
		public TrnStockPrice()
		{
			this._MstSymbol = default(EntityRef<MstSymbol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolId", DbType="Int NOT NULL")]
		public int SymbolId
		{
			get
			{
				return this._SymbolId;
			}
			set
			{
				if ((this._SymbolId != value))
				{
					if (this._MstSymbol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSymbolIdChanging(value);
					this.SendPropertyChanging();
					this._SymbolId = value;
					this.SendPropertyChanged("SymbolId");
					this.OnSymbolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteDate", DbType="DateTime NOT NULL")]
		public System.DateTime QuoteDate
		{
			get
			{
				return this._QuoteDate;
			}
			set
			{
				if ((this._QuoteDate != value))
				{
					this.OnQuoteDateChanging(value);
					this.SendPropertyChanging();
					this._QuoteDate = value;
					this.SendPropertyChanged("QuoteDate");
					this.OnQuoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Decimal(18,8) NOT NULL")]
		public decimal OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this.OnOpenPriceChanging(value);
					this.SendPropertyChanging();
					this._OpenPrice = value;
					this.SendPropertyChanged("OpenPrice");
					this.OnOpenPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighPrice", DbType="Decimal(18,8) NOT NULL")]
		public decimal HighPrice
		{
			get
			{
				return this._HighPrice;
			}
			set
			{
				if ((this._HighPrice != value))
				{
					this.OnHighPriceChanging(value);
					this.SendPropertyChanging();
					this._HighPrice = value;
					this.SendPropertyChanged("HighPrice");
					this.OnHighPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowPrice", DbType="Decimal(18,8) NOT NULL")]
		public decimal LowPrice
		{
			get
			{
				return this._LowPrice;
			}
			set
			{
				if ((this._LowPrice != value))
				{
					this.OnLowPriceChanging(value);
					this.SendPropertyChanging();
					this._LowPrice = value;
					this.SendPropertyChanged("LowPrice");
					this.OnLowPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(18,8) NOT NULL")]
		public decimal ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this.OnClosePriceChanging(value);
					this.SendPropertyChanging();
					this._ClosePrice = value;
					this.SendPropertyChanged("ClosePrice");
					this.OnClosePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Decimal(18,8) NOT NULL")]
		public decimal Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnStockPrice", Storage="_MstSymbol", ThisKey="SymbolId", OtherKey="Id", IsForeignKey=true)]
		public MstSymbol MstSymbol
		{
			get
			{
				return this._MstSymbol.Entity;
			}
			set
			{
				MstSymbol previousValue = this._MstSymbol.Entity;
				if (((previousValue != value) 
							|| (this._MstSymbol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstSymbol.Entity = null;
						previousValue.TrnStockPrices.Remove(this);
					}
					this._MstSymbol.Entity = value;
					if ((value != null))
					{
						value.TrnStockPrices.Add(this);
						this._SymbolId = value.Id;
					}
					else
					{
						this._SymbolId = default(int);
					}
					this.SendPropertyChanged("MstSymbol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockPriceIntraDay")]
	public partial class TrnStockPriceIntraDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SymbolId;
		
		private string _Symbol;
		
		private string _QuoteDate;
		
		private decimal _OpenPrice;
		
		private decimal _HighPrice;
		
		private decimal _LowPrice;
		
		private decimal _ClosePrice;
		
		private decimal _Volume;
		
		private EntityRef<MstSymbol> _MstSymbol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSymbolIdChanging(int value);
    partial void OnSymbolIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnQuoteDateChanging(string value);
    partial void OnQuoteDateChanged();
    partial void OnOpenPriceChanging(decimal value);
    partial void OnOpenPriceChanged();
    partial void OnHighPriceChanging(decimal value);
    partial void OnHighPriceChanged();
    partial void OnLowPriceChanging(decimal value);
    partial void OnLowPriceChanged();
    partial void OnClosePriceChanging(decimal value);
    partial void OnClosePriceChanged();
    partial void OnVolumeChanging(decimal value);
    partial void OnVolumeChanged();
    #endregion
		
		public TrnStockPriceIntraDay()
		{
			this._MstSymbol = default(EntityRef<MstSymbol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolId", DbType="Int NOT NULL")]
		public int SymbolId
		{
			get
			{
				return this._SymbolId;
			}
			set
			{
				if ((this._SymbolId != value))
				{
					if (this._MstSymbol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSymbolIdChanging(value);
					this.SendPropertyChanging();
					this._SymbolId = value;
					this.SendPropertyChanged("SymbolId");
					this.OnSymbolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string QuoteDate
		{
			get
			{
				return this._QuoteDate;
			}
			set
			{
				if ((this._QuoteDate != value))
				{
					this.OnQuoteDateChanging(value);
					this.SendPropertyChanging();
					this._QuoteDate = value;
					this.SendPropertyChanged("QuoteDate");
					this.OnQuoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Decimal(18,8) NOT NULL")]
		public decimal OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this.OnOpenPriceChanging(value);
					this.SendPropertyChanging();
					this._OpenPrice = value;
					this.SendPropertyChanged("OpenPrice");
					this.OnOpenPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighPrice", DbType="Decimal(18,8) NOT NULL")]
		public decimal HighPrice
		{
			get
			{
				return this._HighPrice;
			}
			set
			{
				if ((this._HighPrice != value))
				{
					this.OnHighPriceChanging(value);
					this.SendPropertyChanging();
					this._HighPrice = value;
					this.SendPropertyChanged("HighPrice");
					this.OnHighPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowPrice", DbType="Decimal(18,8) NOT NULL")]
		public decimal LowPrice
		{
			get
			{
				return this._LowPrice;
			}
			set
			{
				if ((this._LowPrice != value))
				{
					this.OnLowPriceChanging(value);
					this.SendPropertyChanging();
					this._LowPrice = value;
					this.SendPropertyChanged("LowPrice");
					this.OnLowPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(18,8) NOT NULL")]
		public decimal ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this.OnClosePriceChanging(value);
					this.SendPropertyChanging();
					this._ClosePrice = value;
					this.SendPropertyChanged("ClosePrice");
					this.OnClosePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Decimal(18,8) NOT NULL")]
		public decimal Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnStockPriceIntraDay", Storage="_MstSymbol", ThisKey="SymbolId", OtherKey="Id", IsForeignKey=true)]
		public MstSymbol MstSymbol
		{
			get
			{
				return this._MstSymbol.Entity;
			}
			set
			{
				MstSymbol previousValue = this._MstSymbol.Entity;
				if (((previousValue != value) 
							|| (this._MstSymbol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstSymbol.Entity = null;
						previousValue.TrnStockPriceIntraDays.Remove(this);
					}
					this._MstSymbol.Entity = value;
					if ((value != null))
					{
						value.TrnStockPriceIntraDays.Add(this);
						this._SymbolId = value.Id;
					}
					else
					{
						this._SymbolId = default(int);
					}
					this.SendPropertyChanged("MstSymbol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnUserAlert")]
	public partial class TrnUserAlert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _Description;
		
		private string _Strategy;
		
		private bool _IsActive;
		
		private System.DateTime _EncodedDate;
		
		private string _AlertVia;
		
		private bool _SymbolFilter;
		
		private string _SymbolExchange;
		
		private System.Nullable<int> _SymbolUserFavoritesId;
		
		private decimal _StrategyGrowthDecayRate;
		
		private string _StrategyGrowthDecayTime;
		
		private bool _StrategyFilter;
		
		private bool _MACDFilter;
		
		private string _MACDCrossover;
		
		private string _MACDEMA;
		
		private bool _MagentaChannelFilter;
		
		private string _MagentaChannelBegins;
		
		private decimal _MagentaChannelAGRADR;
		
		private bool _SeasonalityFilter;
		
		private decimal _SeasonalityWinLossPercent;
		
		private decimal _SeasonalityGainLossPercent;
		
		private bool _AdditionalFilter;
		
		private decimal _AdditionalFilterPrice;
		
		private decimal _AdditionalFilterVolume;
		
		private int _AdditionalFilterNoOfYears;
		
		private int _MagentaChannelDays;
		
		private int _MagentaChannelCorrelation30;
		
		private string _SeasonalityTrend;
		
		private EntitySet<TrnUserAlertSymbol> _TrnUserAlertSymbols;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStrategyChanging(string value);
    partial void OnStrategyChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnEncodedDateChanging(System.DateTime value);
    partial void OnEncodedDateChanged();
    partial void OnAlertViaChanging(string value);
    partial void OnAlertViaChanged();
    partial void OnSymbolFilterChanging(bool value);
    partial void OnSymbolFilterChanged();
    partial void OnSymbolExchangeChanging(string value);
    partial void OnSymbolExchangeChanged();
    partial void OnSymbolUserFavoritesIdChanging(System.Nullable<int> value);
    partial void OnSymbolUserFavoritesIdChanged();
    partial void OnStrategyGrowthDecayRateChanging(decimal value);
    partial void OnStrategyGrowthDecayRateChanged();
    partial void OnStrategyGrowthDecayTimeChanging(string value);
    partial void OnStrategyGrowthDecayTimeChanged();
    partial void OnStrategyFilterChanging(bool value);
    partial void OnStrategyFilterChanged();
    partial void OnMACDFilterChanging(bool value);
    partial void OnMACDFilterChanged();
    partial void OnMACDCrossoverChanging(string value);
    partial void OnMACDCrossoverChanged();
    partial void OnMACDEMAChanging(string value);
    partial void OnMACDEMAChanged();
    partial void OnMagentaChannelFilterChanging(bool value);
    partial void OnMagentaChannelFilterChanged();
    partial void OnMagentaChannelBeginsChanging(string value);
    partial void OnMagentaChannelBeginsChanged();
    partial void OnMagentaChannelAGRADRChanging(decimal value);
    partial void OnMagentaChannelAGRADRChanged();
    partial void OnSeasonalityFilterChanging(bool value);
    partial void OnSeasonalityFilterChanged();
    partial void OnSeasonalityWinLossPercentChanging(decimal value);
    partial void OnSeasonalityWinLossPercentChanged();
    partial void OnSeasonalityGainLossPercentChanging(decimal value);
    partial void OnSeasonalityGainLossPercentChanged();
    partial void OnAdditionalFilterChanging(bool value);
    partial void OnAdditionalFilterChanged();
    partial void OnAdditionalFilterPriceChanging(decimal value);
    partial void OnAdditionalFilterPriceChanged();
    partial void OnAdditionalFilterVolumeChanging(decimal value);
    partial void OnAdditionalFilterVolumeChanged();
    partial void OnAdditionalFilterNoOfYearsChanging(int value);
    partial void OnAdditionalFilterNoOfYearsChanged();
    partial void OnMagentaChannelDaysChanging(int value);
    partial void OnMagentaChannelDaysChanged();
    partial void OnMagentaChannelCorrelation30Changing(int value);
    partial void OnMagentaChannelCorrelation30Changed();
    partial void OnSeasonalityTrendChanging(string value);
    partial void OnSeasonalityTrendChanged();
    #endregion
		
		public TrnUserAlert()
		{
			this._TrnUserAlertSymbols = new EntitySet<TrnUserAlertSymbol>(new Action<TrnUserAlertSymbol>(this.attach_TrnUserAlertSymbols), new Action<TrnUserAlertSymbol>(this.detach_TrnUserAlertSymbols));
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strategy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Strategy
		{
			get
			{
				return this._Strategy;
			}
			set
			{
				if ((this._Strategy != value))
				{
					this.OnStrategyChanging(value);
					this.SendPropertyChanging();
					this._Strategy = value;
					this.SendPropertyChanged("Strategy");
					this.OnStrategyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodedDate", DbType="DateTime NOT NULL")]
		public System.DateTime EncodedDate
		{
			get
			{
				return this._EncodedDate;
			}
			set
			{
				if ((this._EncodedDate != value))
				{
					this.OnEncodedDateChanging(value);
					this.SendPropertyChanging();
					this._EncodedDate = value;
					this.SendPropertyChanged("EncodedDate");
					this.OnEncodedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertVia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AlertVia
		{
			get
			{
				return this._AlertVia;
			}
			set
			{
				if ((this._AlertVia != value))
				{
					this.OnAlertViaChanging(value);
					this.SendPropertyChanging();
					this._AlertVia = value;
					this.SendPropertyChanged("AlertVia");
					this.OnAlertViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolFilter", DbType="Bit NOT NULL")]
		public bool SymbolFilter
		{
			get
			{
				return this._SymbolFilter;
			}
			set
			{
				if ((this._SymbolFilter != value))
				{
					this.OnSymbolFilterChanging(value);
					this.SendPropertyChanging();
					this._SymbolFilter = value;
					this.SendPropertyChanged("SymbolFilter");
					this.OnSymbolFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolExchange", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SymbolExchange
		{
			get
			{
				return this._SymbolExchange;
			}
			set
			{
				if ((this._SymbolExchange != value))
				{
					this.OnSymbolExchangeChanging(value);
					this.SendPropertyChanging();
					this._SymbolExchange = value;
					this.SendPropertyChanged("SymbolExchange");
					this.OnSymbolExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolUserFavoritesId", DbType="Int")]
		public System.Nullable<int> SymbolUserFavoritesId
		{
			get
			{
				return this._SymbolUserFavoritesId;
			}
			set
			{
				if ((this._SymbolUserFavoritesId != value))
				{
					this.OnSymbolUserFavoritesIdChanging(value);
					this.SendPropertyChanging();
					this._SymbolUserFavoritesId = value;
					this.SendPropertyChanged("SymbolUserFavoritesId");
					this.OnSymbolUserFavoritesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrategyGrowthDecayRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal StrategyGrowthDecayRate
		{
			get
			{
				return this._StrategyGrowthDecayRate;
			}
			set
			{
				if ((this._StrategyGrowthDecayRate != value))
				{
					this.OnStrategyGrowthDecayRateChanging(value);
					this.SendPropertyChanging();
					this._StrategyGrowthDecayRate = value;
					this.SendPropertyChanged("StrategyGrowthDecayRate");
					this.OnStrategyGrowthDecayRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrategyGrowthDecayTime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StrategyGrowthDecayTime
		{
			get
			{
				return this._StrategyGrowthDecayTime;
			}
			set
			{
				if ((this._StrategyGrowthDecayTime != value))
				{
					this.OnStrategyGrowthDecayTimeChanging(value);
					this.SendPropertyChanging();
					this._StrategyGrowthDecayTime = value;
					this.SendPropertyChanged("StrategyGrowthDecayTime");
					this.OnStrategyGrowthDecayTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrategyFilter", DbType="Bit NOT NULL")]
		public bool StrategyFilter
		{
			get
			{
				return this._StrategyFilter;
			}
			set
			{
				if ((this._StrategyFilter != value))
				{
					this.OnStrategyFilterChanging(value);
					this.SendPropertyChanging();
					this._StrategyFilter = value;
					this.SendPropertyChanged("StrategyFilter");
					this.OnStrategyFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACDFilter", DbType="Bit NOT NULL")]
		public bool MACDFilter
		{
			get
			{
				return this._MACDFilter;
			}
			set
			{
				if ((this._MACDFilter != value))
				{
					this.OnMACDFilterChanging(value);
					this.SendPropertyChanging();
					this._MACDFilter = value;
					this.SendPropertyChanged("MACDFilter");
					this.OnMACDFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACDCrossover", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MACDCrossover
		{
			get
			{
				return this._MACDCrossover;
			}
			set
			{
				if ((this._MACDCrossover != value))
				{
					this.OnMACDCrossoverChanging(value);
					this.SendPropertyChanging();
					this._MACDCrossover = value;
					this.SendPropertyChanged("MACDCrossover");
					this.OnMACDCrossoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACDEMA", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MACDEMA
		{
			get
			{
				return this._MACDEMA;
			}
			set
			{
				if ((this._MACDEMA != value))
				{
					this.OnMACDEMAChanging(value);
					this.SendPropertyChanging();
					this._MACDEMA = value;
					this.SendPropertyChanged("MACDEMA");
					this.OnMACDEMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagentaChannelFilter", DbType="Bit NOT NULL")]
		public bool MagentaChannelFilter
		{
			get
			{
				return this._MagentaChannelFilter;
			}
			set
			{
				if ((this._MagentaChannelFilter != value))
				{
					this.OnMagentaChannelFilterChanging(value);
					this.SendPropertyChanging();
					this._MagentaChannelFilter = value;
					this.SendPropertyChanged("MagentaChannelFilter");
					this.OnMagentaChannelFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagentaChannelBegins", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MagentaChannelBegins
		{
			get
			{
				return this._MagentaChannelBegins;
			}
			set
			{
				if ((this._MagentaChannelBegins != value))
				{
					this.OnMagentaChannelBeginsChanging(value);
					this.SendPropertyChanging();
					this._MagentaChannelBegins = value;
					this.SendPropertyChanged("MagentaChannelBegins");
					this.OnMagentaChannelBeginsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagentaChannelAGRADR", DbType="Decimal(18,5) NOT NULL")]
		public decimal MagentaChannelAGRADR
		{
			get
			{
				return this._MagentaChannelAGRADR;
			}
			set
			{
				if ((this._MagentaChannelAGRADR != value))
				{
					this.OnMagentaChannelAGRADRChanging(value);
					this.SendPropertyChanging();
					this._MagentaChannelAGRADR = value;
					this.SendPropertyChanged("MagentaChannelAGRADR");
					this.OnMagentaChannelAGRADRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonalityFilter", DbType="Bit NOT NULL")]
		public bool SeasonalityFilter
		{
			get
			{
				return this._SeasonalityFilter;
			}
			set
			{
				if ((this._SeasonalityFilter != value))
				{
					this.OnSeasonalityFilterChanging(value);
					this.SendPropertyChanging();
					this._SeasonalityFilter = value;
					this.SendPropertyChanged("SeasonalityFilter");
					this.OnSeasonalityFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonalityWinLossPercent", DbType="Decimal(18,5) NOT NULL")]
		public decimal SeasonalityWinLossPercent
		{
			get
			{
				return this._SeasonalityWinLossPercent;
			}
			set
			{
				if ((this._SeasonalityWinLossPercent != value))
				{
					this.OnSeasonalityWinLossPercentChanging(value);
					this.SendPropertyChanging();
					this._SeasonalityWinLossPercent = value;
					this.SendPropertyChanged("SeasonalityWinLossPercent");
					this.OnSeasonalityWinLossPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonalityGainLossPercent", DbType="Decimal(18,5) NOT NULL")]
		public decimal SeasonalityGainLossPercent
		{
			get
			{
				return this._SeasonalityGainLossPercent;
			}
			set
			{
				if ((this._SeasonalityGainLossPercent != value))
				{
					this.OnSeasonalityGainLossPercentChanging(value);
					this.SendPropertyChanging();
					this._SeasonalityGainLossPercent = value;
					this.SendPropertyChanged("SeasonalityGainLossPercent");
					this.OnSeasonalityGainLossPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalFilter", DbType="Bit NOT NULL")]
		public bool AdditionalFilter
		{
			get
			{
				return this._AdditionalFilter;
			}
			set
			{
				if ((this._AdditionalFilter != value))
				{
					this.OnAdditionalFilterChanging(value);
					this.SendPropertyChanging();
					this._AdditionalFilter = value;
					this.SendPropertyChanged("AdditionalFilter");
					this.OnAdditionalFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalFilterPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal AdditionalFilterPrice
		{
			get
			{
				return this._AdditionalFilterPrice;
			}
			set
			{
				if ((this._AdditionalFilterPrice != value))
				{
					this.OnAdditionalFilterPriceChanging(value);
					this.SendPropertyChanging();
					this._AdditionalFilterPrice = value;
					this.SendPropertyChanged("AdditionalFilterPrice");
					this.OnAdditionalFilterPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalFilterVolume", DbType="Decimal(18,5) NOT NULL")]
		public decimal AdditionalFilterVolume
		{
			get
			{
				return this._AdditionalFilterVolume;
			}
			set
			{
				if ((this._AdditionalFilterVolume != value))
				{
					this.OnAdditionalFilterVolumeChanging(value);
					this.SendPropertyChanging();
					this._AdditionalFilterVolume = value;
					this.SendPropertyChanged("AdditionalFilterVolume");
					this.OnAdditionalFilterVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalFilterNoOfYears", DbType="Int NOT NULL")]
		public int AdditionalFilterNoOfYears
		{
			get
			{
				return this._AdditionalFilterNoOfYears;
			}
			set
			{
				if ((this._AdditionalFilterNoOfYears != value))
				{
					this.OnAdditionalFilterNoOfYearsChanging(value);
					this.SendPropertyChanging();
					this._AdditionalFilterNoOfYears = value;
					this.SendPropertyChanged("AdditionalFilterNoOfYears");
					this.OnAdditionalFilterNoOfYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagentaChannelDays", DbType="Int NOT NULL")]
		public int MagentaChannelDays
		{
			get
			{
				return this._MagentaChannelDays;
			}
			set
			{
				if ((this._MagentaChannelDays != value))
				{
					this.OnMagentaChannelDaysChanging(value);
					this.SendPropertyChanging();
					this._MagentaChannelDays = value;
					this.SendPropertyChanged("MagentaChannelDays");
					this.OnMagentaChannelDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagentaChannelCorrelation30", DbType="Int NOT NULL")]
		public int MagentaChannelCorrelation30
		{
			get
			{
				return this._MagentaChannelCorrelation30;
			}
			set
			{
				if ((this._MagentaChannelCorrelation30 != value))
				{
					this.OnMagentaChannelCorrelation30Changing(value);
					this.SendPropertyChanging();
					this._MagentaChannelCorrelation30 = value;
					this.SendPropertyChanged("MagentaChannelCorrelation30");
					this.OnMagentaChannelCorrelation30Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonalityTrend", DbType="NVarChar(50)")]
		public string SeasonalityTrend
		{
			get
			{
				return this._SeasonalityTrend;
			}
			set
			{
				if ((this._SeasonalityTrend != value))
				{
					this.OnSeasonalityTrendChanging(value);
					this.SendPropertyChanging();
					this._SeasonalityTrend = value;
					this.SendPropertyChanged("SeasonalityTrend");
					this.OnSeasonalityTrendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnUserAlert_TrnUserAlertSymbol", Storage="_TrnUserAlertSymbols", ThisKey="Id", OtherKey="UserAlertId")]
		public EntitySet<TrnUserAlertSymbol> TrnUserAlertSymbols
		{
			get
			{
				return this._TrnUserAlertSymbols;
			}
			set
			{
				this._TrnUserAlertSymbols.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnUserAlert", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnUserAlerts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnUserAlerts.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnUserAlertSymbols(TrnUserAlertSymbol entity)
		{
			this.SendPropertyChanging();
			entity.TrnUserAlert = this;
		}
		
		private void detach_TrnUserAlertSymbols(TrnUserAlertSymbol entity)
		{
			this.SendPropertyChanging();
			entity.TrnUserAlert = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnUserAlertSymbols")]
	public partial class TrnUserAlertSymbol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserAlertId;
		
		private int _SymbolId;
		
		private string _Symbol;
		
		private string _Trend;
		
		private System.DateTime _EncodedDate;
		
		private EntityRef<MstSymbol> _MstSymbol;
		
		private EntityRef<TrnUserAlert> _TrnUserAlert;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserAlertIdChanging(int value);
    partial void OnUserAlertIdChanged();
    partial void OnSymbolIdChanging(int value);
    partial void OnSymbolIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnTrendChanging(string value);
    partial void OnTrendChanged();
    partial void OnEncodedDateChanging(System.DateTime value);
    partial void OnEncodedDateChanged();
    #endregion
		
		public TrnUserAlertSymbol()
		{
			this._MstSymbol = default(EntityRef<MstSymbol>);
			this._TrnUserAlert = default(EntityRef<TrnUserAlert>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAlertId", DbType="Int NOT NULL")]
		public int UserAlertId
		{
			get
			{
				return this._UserAlertId;
			}
			set
			{
				if ((this._UserAlertId != value))
				{
					if (this._TrnUserAlert.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAlertIdChanging(value);
					this.SendPropertyChanging();
					this._UserAlertId = value;
					this.SendPropertyChanged("UserAlertId");
					this.OnUserAlertIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolId", DbType="Int NOT NULL")]
		public int SymbolId
		{
			get
			{
				return this._SymbolId;
			}
			set
			{
				if ((this._SymbolId != value))
				{
					if (this._MstSymbol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSymbolIdChanging(value);
					this.SendPropertyChanging();
					this._SymbolId = value;
					this.SendPropertyChanged("SymbolId");
					this.OnSymbolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trend", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Trend
		{
			get
			{
				return this._Trend;
			}
			set
			{
				if ((this._Trend != value))
				{
					this.OnTrendChanging(value);
					this.SendPropertyChanging();
					this._Trend = value;
					this.SendPropertyChanged("Trend");
					this.OnTrendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodedDate", DbType="DateTime NOT NULL")]
		public System.DateTime EncodedDate
		{
			get
			{
				return this._EncodedDate;
			}
			set
			{
				if ((this._EncodedDate != value))
				{
					this.OnEncodedDateChanging(value);
					this.SendPropertyChanging();
					this._EncodedDate = value;
					this.SendPropertyChanged("EncodedDate");
					this.OnEncodedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSymbol_TrnUserAlertSymbol", Storage="_MstSymbol", ThisKey="SymbolId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstSymbol MstSymbol
		{
			get
			{
				return this._MstSymbol.Entity;
			}
			set
			{
				MstSymbol previousValue = this._MstSymbol.Entity;
				if (((previousValue != value) 
							|| (this._MstSymbol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstSymbol.Entity = null;
						previousValue.TrnUserAlertSymbols.Remove(this);
					}
					this._MstSymbol.Entity = value;
					if ((value != null))
					{
						value.TrnUserAlertSymbols.Add(this);
						this._SymbolId = value.Id;
					}
					else
					{
						this._SymbolId = default(int);
					}
					this.SendPropertyChanged("MstSymbol");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnUserAlert_TrnUserAlertSymbol", Storage="_TrnUserAlert", ThisKey="UserAlertId", OtherKey="Id", IsForeignKey=true)]
		public TrnUserAlert TrnUserAlert
		{
			get
			{
				return this._TrnUserAlert.Entity;
			}
			set
			{
				TrnUserAlert previousValue = this._TrnUserAlert.Entity;
				if (((previousValue != value) 
							|| (this._TrnUserAlert.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnUserAlert.Entity = null;
						previousValue.TrnUserAlertSymbols.Remove(this);
					}
					this._TrnUserAlert.Entity = value;
					if ((value != null))
					{
						value.TrnUserAlertSymbols.Add(this);
						this._UserAlertId = value.Id;
					}
					else
					{
						this._UserAlertId = default(int);
					}
					this.SendPropertyChanged("TrnUserAlert");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnUserFavorites")]
	public partial class TrnUserFavorite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _Description;
		
		private bool _IsShared;
		
		private System.Nullable<System.DateTime> _EncodedDate;
		
		private EntitySet<TrnUserFavoritesSymbol> _TrnUserFavoritesSymbols;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsSharedChanging(bool value);
    partial void OnIsSharedChanged();
    partial void OnEncodedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEncodedDateChanged();
    #endregion
		
		public TrnUserFavorite()
		{
			this._TrnUserFavoritesSymbols = new EntitySet<TrnUserFavoritesSymbol>(new Action<TrnUserFavoritesSymbol>(this.attach_TrnUserFavoritesSymbols), new Action<TrnUserFavoritesSymbol>(this.detach_TrnUserFavoritesSymbols));
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShared", DbType="Bit NOT NULL")]
		public bool IsShared
		{
			get
			{
				return this._IsShared;
			}
			set
			{
				if ((this._IsShared != value))
				{
					this.OnIsSharedChanging(value);
					this.SendPropertyChanging();
					this._IsShared = value;
					this.SendPropertyChanged("IsShared");
					this.OnIsSharedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EncodedDate
		{
			get
			{
				return this._EncodedDate;
			}
			set
			{
				if ((this._EncodedDate != value))
				{
					this.OnEncodedDateChanging(value);
					this.SendPropertyChanging();
					this._EncodedDate = value;
					this.SendPropertyChanged("EncodedDate");
					this.OnEncodedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnUserFavorite_TrnUserFavoritesSymbol", Storage="_TrnUserFavoritesSymbols", ThisKey="Id", OtherKey="UserFavoritesId")]
		public EntitySet<TrnUserFavoritesSymbol> TrnUserFavoritesSymbols
		{
			get
			{
				return this._TrnUserFavoritesSymbols;
			}
			set
			{
				this._TrnUserFavoritesSymbols.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnUserFavorite", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnUserFavorites.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnUserFavorites.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnUserFavoritesSymbols(TrnUserFavoritesSymbol entity)
		{
			this.SendPropertyChanging();
			entity.TrnUserFavorite = this;
		}
		
		private void detach_TrnUserFavoritesSymbols(TrnUserFavoritesSymbol entity)
		{
			this.SendPropertyChanging();
			entity.TrnUserFavorite = null;
		}
	}
}
#pragma warning restore 1591
